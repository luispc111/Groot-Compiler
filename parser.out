Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    L_CORCHETE
    PUNTO
    R_CORCHETE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty
Rule 2     variables -> VARIABLES variablesU
Rule 3     variables -> empty
Rule 4     variablesU -> variablesD
Rule 5     variablesU -> empty
Rule 6     variablesD -> ID neu_addVariableAStack COMA variablesD
Rule 7     variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU
Rule 8     funciones -> funcionesU
Rule 9     funciones -> empty
Rule 10    funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD
Rule 11    funcionesD -> funciones
Rule 12    funcionesD -> empty
Rule 13    tipo_funcion -> ENTERO empty
Rule 14    tipo_funcion -> FLOTANTE empty
Rule 15    tipo_funcion -> CARACTER empty
Rule 16    tipo_funcion -> VOID empty
Rule 17    tipo_var -> ENTERO empty
Rule 18    tipo_var -> FLOTANTE empty
Rule 19    tipo_var -> CARACTER empty
Rule 20    recibir_parametros -> ID DOSPUNTOS tipo_var recibir_parametrosD empty
Rule 21    recibir_parametros -> empty
Rule 22    recibir_parametrosD -> COMA recibir_parametros empty
Rule 23    recibir_parametrosD -> empty
Rule 24    mandar_parametros -> ID mandar_parametrosD empty
Rule 25    mandar_parametros -> empty
Rule 26    mandar_parametrosD -> COMA mandar_parametros empty
Rule 27    mandar_parametrosD -> empty
Rule 28    bloque -> L_LLAVE bloqueU R_LLAVE empty
Rule 29    bloqueU -> estatuto bloqueD empty
Rule 30    bloqueU -> empty
Rule 31    bloqueD -> bloqueU empty
Rule 32    bloqueD -> empty
Rule 33    estatuto -> asignacion PUNTOYCOMA empty
Rule 34    estatuto -> llamada PUNTOYCOMA empty
Rule 35    estatuto -> retorno PUNTOYCOMA empty
Rule 36    estatuto -> lectura PUNTOYCOMA empty
Rule 37    estatuto -> escritura PUNTOYCOMA empty
Rule 38    estatuto -> decision empty
Rule 39    estatuto -> condicional empty
Rule 40    estatuto -> no_condicional empty
Rule 41    estatuto -> funciones_especiales PUNTOYCOMA empty
Rule 42    estatuto -> empty
Rule 43    asignacion -> ID IGUAL hiper_exp empty
Rule 44    llamada -> ID L_PAR mandar_parametros R_PAR empty
Rule 45    retorno -> REGRESA L_PAR ID R_PAR empty
Rule 46    lectura -> LEER L_PAR ID R_PAR empty
Rule 47    escritura -> ESCRIBIR L_PAR escrituraD R_PAR empty
Rule 48    escrituraD -> hiper_exp empty
Rule 49    escrituraD -> LETRERO empty
Rule 50    decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty
Rule 51    decisionU -> SINO bloque empty
Rule 52    decisionU -> empty
Rule 53    condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty
Rule 54    no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty
Rule 55    funciones_especiales -> circulo empty
Rule 56    funciones_especiales -> color empty
Rule 57    funciones_especiales -> grosor empty
Rule 58    funciones_especiales -> linea empty
Rule 59    funciones_especiales -> puntoxy empty
Rule 60    funciones_especiales -> arco empty
Rule 61    funciones_especiales -> penup empty
Rule 62    funciones_especiales -> pendown empty
Rule 63    funciones_especiales -> empty
Rule 64    circulo -> CIRCULO L_PAR hiper_exp R_PAR empty
Rule 65    color -> COLOR L_PAR hiper_exp R_PAR empty
Rule 66    grosor -> GROSOR L_PAR hiper_exp R_PAR empty
Rule 67    linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty
Rule 68    puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty
Rule 69    arco -> ARCO L_PAR hiper_exp R_PAR empty
Rule 70    penup -> PENUP L_PAR hiper_exp R_PAR empty
Rule 71    pendown -> PENDOWN L_PAR hiper_exp R_PAR empty
Rule 72    operadorA -> MAS empty
Rule 73    operadorA -> MENOS empty
Rule 74    operadorT -> MULT empty
Rule 75    operadorT -> DIV empty
Rule 76    operadorL -> OR empty
Rule 77    operadorL -> AND empty
Rule 78    operadorR -> MENORQUE empty
Rule 79    operadorR -> MAYORQUE empty
Rule 80    operadorR -> MENORIGUALQUE empty
Rule 81    operadorR -> MAYORIGUALQUE empty
Rule 82    operadorR -> IGUALQUE empty
Rule 83    operadorR -> DIFQUE empty
Rule 84    hiper_exp -> super_exp hiper_expU
Rule 85    hiper_expU -> operadorL hiper_exp empty
Rule 86    hiper_expU -> empty
Rule 87    super_exp -> exp super_expU
Rule 88    super_expU -> operadorR exp empty
Rule 89    super_expU -> empty
Rule 90    exp -> termino expU
Rule 91    expU -> operadorA exp
Rule 92    expU -> empty
Rule 93    termino -> factor terminoU
Rule 94    terminoU -> operadorT termino
Rule 95    terminoU -> empty
Rule 96    factor -> varcte empty
Rule 97    factor -> llamada empty
Rule 98    factor -> L_PAR hiper_exp R_PAR empty
Rule 99    varcte -> ID empty
Rule 100   varcte -> ENTEROVAL empty
Rule 101   varcte -> FLOTANTEVAL empty
Rule 102   varcte -> CARACTERVAL empty
Rule 103   empty -> <empty>
Rule 104   neu_programa -> <empty>
Rule 105   neu_addFuncion -> <empty>
Rule 106   neu_addVariable -> <empty>
Rule 107   neu_addVariableAStack -> <empty>

Terminals, with rules where they appear

AND                  : 77
ARCO                 : 69
CARACTER             : 15 19
CARACTERVAL          : 102
CIRCULO              : 64
COLOR                : 65
COMA                 : 6 22 26 67 67 67 68
DESDE                : 54
DIFQUE               : 83
DIV                  : 75
DOSPUNTOS            : 7 20
ENTERO               : 13 17
ENTEROVAL            : 100
ENTONCES             : 50
ESCRIBIR             : 47
FLOTANTE             : 14 18
FLOTANTEVAL          : 101
FUNCION              : 10
GROSOR               : 66
HACER                : 53 54
HASTA                : 54
ID                   : 1 6 7 10 20 24 43 44 45 46 99
IGUAL                : 43
IGUALQUE             : 82
LEER                 : 46
LETRERO              : 49
LINEA                : 67
L_CORCHETE           : 
L_LLAVE              : 28
L_PAR                : 1 10 44 45 46 47 50 53 54 64 65 66 67 68 69 70 71 98
MAS                  : 72
MAYORIGUALQUE        : 81
MAYORQUE             : 79
MENORIGUALQUE        : 80
MENORQUE             : 78
MENOS                : 73
MIENTRAS             : 53
MULT                 : 74
OR                   : 76
PENDOWN              : 71
PENUP                : 70
PRINCIPAL            : 1
PROGRAMA             : 1
PUNTO                : 
PUNTOXY              : 68
PUNTOYCOMA           : 1 7 33 34 35 36 37 41
REGRESA              : 45
R_CORCHETE           : 
R_LLAVE              : 28
R_PAR                : 1 10 44 45 46 47 50 53 54 64 65 66 67 68 69 70 71 98
SI                   : 50
SINO                 : 51
VARIABLES            : 2
VOID                 : 16
error                : 

Nonterminals, with rules where they appear

arco                 : 60
asignacion           : 33 54
bloque               : 1 10 50 51 53 54
bloqueD              : 29
bloqueU              : 28 31
circulo              : 55
color                : 56
condicional          : 39
decision             : 38
decisionU            : 50
empty                : 1 3 5 9 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 85 86 88 89 92 95 96 97 98 99 100 101 102
escritura            : 37
escrituraD           : 47
estatuto             : 29
exp                  : 87 88 91
expU                 : 90
factor               : 93
funciones            : 1 11
funcionesD           : 10
funcionesU           : 8
funciones_especiales : 41
grosor               : 57
hiper_exp            : 43 48 50 53 54 64 65 66 67 67 67 67 68 68 69 70 71 85 98
hiper_expU           : 84
lectura              : 36
linea                : 58
llamada              : 34 97
mandar_parametros    : 26 44
mandar_parametrosD   : 24
neu_addFuncion       : 10
neu_addVariable      : 7
neu_addVariableAStack : 6
neu_programa         : 1
no_condicional       : 40
operadorA            : 91
operadorL            : 85
operadorR            : 88
operadorT            : 94
pendown              : 62
penup                : 61
program              : 0
puntoxy              : 59
recibir_parametros   : 10 22
recibir_parametrosD  : 20
retorno              : 35
super_exp            : 84
super_expU           : 87
termino              : 90 94
terminoU             : 93
tipo_funcion         : 10
tipo_var             : 7 20
varcte               : 96
variables            : 1 10
variablesD           : 4 6
variablesU           : 2 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty

    PROGRAMA        shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAMA . ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAMA ID . neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty
    (104) neu_programa -> .

    PUNTOYCOMA      reduce using rule 104 (neu_programa -> .)

    neu_programa                   shift and go to state 4

state 4

    (1) program -> PROGRAMA ID neu_programa . PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty

    PUNTOYCOMA      shift and go to state 5


state 5

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA . variables funciones PRINCIPAL L_PAR R_PAR bloque empty
    (2) variables -> . VARIABLES variablesU
    (3) variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 8
    ENTERO          reduce using rule 103 (empty -> .)
    FLOTANTE        reduce using rule 103 (empty -> .)
    CARACTER        reduce using rule 103 (empty -> .)
    VOID            reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)

    variables                      shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables . funciones PRINCIPAL L_PAR R_PAR bloque empty
    (8) funciones -> . funcionesU
    (9) funciones -> . empty
    (10) funcionesU -> . tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD
    (103) empty -> .
    (13) tipo_funcion -> . ENTERO empty
    (14) tipo_funcion -> . FLOTANTE empty
    (15) tipo_funcion -> . CARACTER empty
    (16) tipo_funcion -> . VOID empty

    PRINCIPAL       reduce using rule 103 (empty -> .)
    ENTERO          shift and go to state 13
    FLOTANTE        shift and go to state 14
    CARACTER        shift and go to state 15
    VOID            shift and go to state 16

    funciones                      shift and go to state 9
    empty                          shift and go to state 10
    funcionesU                     shift and go to state 11
    tipo_funcion                   shift and go to state 12

state 7

    (3) variables -> empty .

    ENTERO          reduce using rule 3 (variables -> empty .)
    FLOTANTE        reduce using rule 3 (variables -> empty .)
    CARACTER        reduce using rule 3 (variables -> empty .)
    VOID            reduce using rule 3 (variables -> empty .)
    PRINCIPAL       reduce using rule 3 (variables -> empty .)
    L_LLAVE         reduce using rule 3 (variables -> empty .)


state 8

    (2) variables -> VARIABLES . variablesU
    (4) variablesU -> . variablesD
    (5) variablesU -> . empty
    (6) variablesD -> . ID neu_addVariableAStack COMA variablesD
    (7) variablesD -> . ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU
    (103) empty -> .

    ID              shift and go to state 20
    ENTERO          reduce using rule 103 (empty -> .)
    FLOTANTE        reduce using rule 103 (empty -> .)
    CARACTER        reduce using rule 103 (empty -> .)
    VOID            reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)
    L_LLAVE         reduce using rule 103 (empty -> .)

    variablesU                     shift and go to state 17
    variablesD                     shift and go to state 18
    empty                          shift and go to state 19

state 9

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones . PRINCIPAL L_PAR R_PAR bloque empty

    PRINCIPAL       shift and go to state 21


state 10

    (9) funciones -> empty .

    PRINCIPAL       reduce using rule 9 (funciones -> empty .)


state 11

    (8) funciones -> funcionesU .

    PRINCIPAL       reduce using rule 8 (funciones -> funcionesU .)


state 12

    (10) funcionesU -> tipo_funcion . FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD

    FUNCION         shift and go to state 22


state 13

    (13) tipo_funcion -> ENTERO . empty
    (103) empty -> .

    FUNCION         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 23

state 14

    (14) tipo_funcion -> FLOTANTE . empty
    (103) empty -> .

    FUNCION         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 24

state 15

    (15) tipo_funcion -> CARACTER . empty
    (103) empty -> .

    FUNCION         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 25

state 16

    (16) tipo_funcion -> VOID . empty
    (103) empty -> .

    FUNCION         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 26

state 17

    (2) variables -> VARIABLES variablesU .

    ENTERO          reduce using rule 2 (variables -> VARIABLES variablesU .)
    FLOTANTE        reduce using rule 2 (variables -> VARIABLES variablesU .)
    CARACTER        reduce using rule 2 (variables -> VARIABLES variablesU .)
    VOID            reduce using rule 2 (variables -> VARIABLES variablesU .)
    PRINCIPAL       reduce using rule 2 (variables -> VARIABLES variablesU .)
    L_LLAVE         reduce using rule 2 (variables -> VARIABLES variablesU .)


state 18

    (4) variablesU -> variablesD .

    ENTERO          reduce using rule 4 (variablesU -> variablesD .)
    FLOTANTE        reduce using rule 4 (variablesU -> variablesD .)
    CARACTER        reduce using rule 4 (variablesU -> variablesD .)
    VOID            reduce using rule 4 (variablesU -> variablesD .)
    PRINCIPAL       reduce using rule 4 (variablesU -> variablesD .)
    L_LLAVE         reduce using rule 4 (variablesU -> variablesD .)


state 19

    (5) variablesU -> empty .

    ENTERO          reduce using rule 5 (variablesU -> empty .)
    FLOTANTE        reduce using rule 5 (variablesU -> empty .)
    CARACTER        reduce using rule 5 (variablesU -> empty .)
    VOID            reduce using rule 5 (variablesU -> empty .)
    PRINCIPAL       reduce using rule 5 (variablesU -> empty .)
    L_LLAVE         reduce using rule 5 (variablesU -> empty .)


state 20

    (6) variablesD -> ID . neu_addVariableAStack COMA variablesD
    (7) variablesD -> ID . DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU
    (107) neu_addVariableAStack -> .

    DOSPUNTOS       shift and go to state 28
    COMA            reduce using rule 107 (neu_addVariableAStack -> .)

    neu_addVariableAStack          shift and go to state 27

state 21

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL . L_PAR R_PAR bloque empty

    L_PAR           shift and go to state 29


state 22

    (10) funcionesU -> tipo_funcion FUNCION . ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD

    ID              shift and go to state 30


state 23

    (13) tipo_funcion -> ENTERO empty .

    FUNCION         reduce using rule 13 (tipo_funcion -> ENTERO empty .)


state 24

    (14) tipo_funcion -> FLOTANTE empty .

    FUNCION         reduce using rule 14 (tipo_funcion -> FLOTANTE empty .)


state 25

    (15) tipo_funcion -> CARACTER empty .

    FUNCION         reduce using rule 15 (tipo_funcion -> CARACTER empty .)


state 26

    (16) tipo_funcion -> VOID empty .

    FUNCION         reduce using rule 16 (tipo_funcion -> VOID empty .)


state 27

    (6) variablesD -> ID neu_addVariableAStack . COMA variablesD

    COMA            shift and go to state 31


state 28

    (7) variablesD -> ID DOSPUNTOS . tipo_var neu_addVariable PUNTOYCOMA variablesU
    (17) tipo_var -> . ENTERO empty
    (18) tipo_var -> . FLOTANTE empty
    (19) tipo_var -> . CARACTER empty

    ENTERO          shift and go to state 33
    FLOTANTE        shift and go to state 34
    CARACTER        shift and go to state 35

    tipo_var                       shift and go to state 32

state 29

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR . R_PAR bloque empty

    R_PAR           shift and go to state 36


state 30

    (10) funcionesU -> tipo_funcion FUNCION ID . neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD
    (105) neu_addFuncion -> .

    L_PAR           reduce using rule 105 (neu_addFuncion -> .)

    neu_addFuncion                 shift and go to state 37

state 31

    (6) variablesD -> ID neu_addVariableAStack COMA . variablesD
    (6) variablesD -> . ID neu_addVariableAStack COMA variablesD
    (7) variablesD -> . ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU

    ID              shift and go to state 20

    variablesD                     shift and go to state 38

state 32

    (7) variablesD -> ID DOSPUNTOS tipo_var . neu_addVariable PUNTOYCOMA variablesU
    (106) neu_addVariable -> .

    PUNTOYCOMA      reduce using rule 106 (neu_addVariable -> .)

    neu_addVariable                shift and go to state 39

state 33

    (17) tipo_var -> ENTERO . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 40

state 34

    (18) tipo_var -> FLOTANTE . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 41

state 35

    (19) tipo_var -> CARACTER . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 42

state 36

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR . bloque empty
    (28) bloque -> . L_LLAVE bloqueU R_LLAVE empty

    L_LLAVE         shift and go to state 44

    bloque                         shift and go to state 43

state 37

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion . L_PAR recibir_parametros R_PAR variables bloque funcionesD

    L_PAR           shift and go to state 45


state 38

    (6) variablesD -> ID neu_addVariableAStack COMA variablesD .

    ENTERO          reduce using rule 6 (variablesD -> ID neu_addVariableAStack COMA variablesD .)
    FLOTANTE        reduce using rule 6 (variablesD -> ID neu_addVariableAStack COMA variablesD .)
    CARACTER        reduce using rule 6 (variablesD -> ID neu_addVariableAStack COMA variablesD .)
    VOID            reduce using rule 6 (variablesD -> ID neu_addVariableAStack COMA variablesD .)
    PRINCIPAL       reduce using rule 6 (variablesD -> ID neu_addVariableAStack COMA variablesD .)
    L_LLAVE         reduce using rule 6 (variablesD -> ID neu_addVariableAStack COMA variablesD .)


state 39

    (7) variablesD -> ID DOSPUNTOS tipo_var neu_addVariable . PUNTOYCOMA variablesU

    PUNTOYCOMA      shift and go to state 46


state 40

    (17) tipo_var -> ENTERO empty .

    PUNTOYCOMA      reduce using rule 17 (tipo_var -> ENTERO empty .)
    COMA            reduce using rule 17 (tipo_var -> ENTERO empty .)
    R_PAR           reduce using rule 17 (tipo_var -> ENTERO empty .)


state 41

    (18) tipo_var -> FLOTANTE empty .

    PUNTOYCOMA      reduce using rule 18 (tipo_var -> FLOTANTE empty .)
    COMA            reduce using rule 18 (tipo_var -> FLOTANTE empty .)
    R_PAR           reduce using rule 18 (tipo_var -> FLOTANTE empty .)


state 42

    (19) tipo_var -> CARACTER empty .

    PUNTOYCOMA      reduce using rule 19 (tipo_var -> CARACTER empty .)
    COMA            reduce using rule 19 (tipo_var -> CARACTER empty .)
    R_PAR           reduce using rule 19 (tipo_var -> CARACTER empty .)


state 43

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque . empty
    (103) empty -> .

    $end            reduce using rule 103 (empty -> .)

    empty                          shift and go to state 47

state 44

    (28) bloque -> L_LLAVE . bloqueU R_LLAVE empty
    (29) bloqueU -> . estatuto bloqueD empty
    (30) bloqueU -> . empty
    (33) estatuto -> . asignacion PUNTOYCOMA empty
    (34) estatuto -> . llamada PUNTOYCOMA empty
    (35) estatuto -> . retorno PUNTOYCOMA empty
    (36) estatuto -> . lectura PUNTOYCOMA empty
    (37) estatuto -> . escritura PUNTOYCOMA empty
    (38) estatuto -> . decision empty
    (39) estatuto -> . condicional empty
    (40) estatuto -> . no_condicional empty
    (41) estatuto -> . funciones_especiales PUNTOYCOMA empty
    (42) estatuto -> . empty
    (103) empty -> .
    (43) asignacion -> . ID IGUAL hiper_exp empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty
    (45) retorno -> . REGRESA L_PAR ID R_PAR empty
    (46) lectura -> . LEER L_PAR ID R_PAR empty
    (47) escritura -> . ESCRIBIR L_PAR escrituraD R_PAR empty
    (50) decision -> . SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty
    (53) condicional -> . MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty
    (54) no_condicional -> . DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty
    (55) funciones_especiales -> . circulo empty
    (56) funciones_especiales -> . color empty
    (57) funciones_especiales -> . grosor empty
    (58) funciones_especiales -> . linea empty
    (59) funciones_especiales -> . puntoxy empty
    (60) funciones_especiales -> . arco empty
    (61) funciones_especiales -> . penup empty
    (62) funciones_especiales -> . pendown empty
    (63) funciones_especiales -> . empty
    (64) circulo -> . CIRCULO L_PAR hiper_exp R_PAR empty
    (65) color -> . COLOR L_PAR hiper_exp R_PAR empty
    (66) grosor -> . GROSOR L_PAR hiper_exp R_PAR empty
    (67) linea -> . LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty
    (68) puntoxy -> . PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty
    (69) arco -> . ARCO L_PAR hiper_exp R_PAR empty
    (70) penup -> . PENUP L_PAR hiper_exp R_PAR empty
    (71) pendown -> . PENDOWN L_PAR hiper_exp R_PAR empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
  ! shift/reduce conflict for ESCRIBIR resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for CIRCULO resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for GROSOR resolved as shift
  ! shift/reduce conflict for LINEA resolved as shift
  ! shift/reduce conflict for PUNTOXY resolved as shift
  ! shift/reduce conflict for ARCO resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
    R_LLAVE         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    SI              shift and go to state 64
    MIENTRAS        shift and go to state 65
    DESDE           shift and go to state 66
    CIRCULO         shift and go to state 75
    COLOR           shift and go to state 76
    GROSOR          shift and go to state 77
    LINEA           shift and go to state 78
    PUNTOXY         shift and go to state 79
    ARCO            shift and go to state 80
    PENUP           shift and go to state 81
    PENDOWN         shift and go to state 82

  ! ID              [ reduce using rule 103 (empty -> .) ]
  ! REGRESA         [ reduce using rule 103 (empty -> .) ]
  ! LEER            [ reduce using rule 103 (empty -> .) ]
  ! ESCRIBIR        [ reduce using rule 103 (empty -> .) ]
  ! SI              [ reduce using rule 103 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 103 (empty -> .) ]
  ! DESDE           [ reduce using rule 103 (empty -> .) ]
  ! CIRCULO         [ reduce using rule 103 (empty -> .) ]
  ! COLOR           [ reduce using rule 103 (empty -> .) ]
  ! GROSOR          [ reduce using rule 103 (empty -> .) ]
  ! LINEA           [ reduce using rule 103 (empty -> .) ]
  ! PUNTOXY         [ reduce using rule 103 (empty -> .) ]
  ! ARCO            [ reduce using rule 103 (empty -> .) ]
  ! PENUP           [ reduce using rule 103 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 103 (empty -> .) ]

    bloqueU                        shift and go to state 48
    empty                          shift and go to state 49
    estatuto                       shift and go to state 50
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    condicional                    shift and go to state 57
    no_condicional                 shift and go to state 58
    funciones_especiales           shift and go to state 59
    circulo                        shift and go to state 67
    color                          shift and go to state 68
    grosor                         shift and go to state 69
    linea                          shift and go to state 70
    puntoxy                        shift and go to state 71
    arco                           shift and go to state 72
    penup                          shift and go to state 73
    pendown                        shift and go to state 74

state 45

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR . recibir_parametros R_PAR variables bloque funcionesD
    (20) recibir_parametros -> . ID DOSPUNTOS tipo_var recibir_parametrosD empty
    (21) recibir_parametros -> . empty
    (103) empty -> .

    ID              shift and go to state 83
    R_PAR           reduce using rule 103 (empty -> .)

    recibir_parametros             shift and go to state 84
    empty                          shift and go to state 85

state 46

    (7) variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA . variablesU
    (4) variablesU -> . variablesD
    (5) variablesU -> . empty
    (6) variablesD -> . ID neu_addVariableAStack COMA variablesD
    (7) variablesD -> . ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU
    (103) empty -> .

    ID              shift and go to state 20
    ENTERO          reduce using rule 103 (empty -> .)
    FLOTANTE        reduce using rule 103 (empty -> .)
    CARACTER        reduce using rule 103 (empty -> .)
    VOID            reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)
    L_LLAVE         reduce using rule 103 (empty -> .)

    variablesU                     shift and go to state 86
    variablesD                     shift and go to state 18
    empty                          shift and go to state 19

state 47

    (1) program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty .

    $end            reduce using rule 1 (program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty .)


state 48

    (28) bloque -> L_LLAVE bloqueU . R_LLAVE empty

    R_LLAVE         shift and go to state 87


state 49

    (30) bloqueU -> empty .
    (42) estatuto -> empty .
    (63) funciones_especiales -> empty .

  ! reduce/reduce conflict for R_LLAVE resolved using rule 30 (bloqueU -> empty .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 42 (estatuto -> empty .)
    R_LLAVE         reduce using rule 30 (bloqueU -> empty .)
    ID              reduce using rule 42 (estatuto -> empty .)
    REGRESA         reduce using rule 42 (estatuto -> empty .)
    LEER            reduce using rule 42 (estatuto -> empty .)
    ESCRIBIR        reduce using rule 42 (estatuto -> empty .)
    SI              reduce using rule 42 (estatuto -> empty .)
    MIENTRAS        reduce using rule 42 (estatuto -> empty .)
    DESDE           reduce using rule 42 (estatuto -> empty .)
    CIRCULO         reduce using rule 42 (estatuto -> empty .)
    COLOR           reduce using rule 42 (estatuto -> empty .)
    GROSOR          reduce using rule 42 (estatuto -> empty .)
    LINEA           reduce using rule 42 (estatuto -> empty .)
    PUNTOXY         reduce using rule 42 (estatuto -> empty .)
    ARCO            reduce using rule 42 (estatuto -> empty .)
    PENUP           reduce using rule 42 (estatuto -> empty .)
    PENDOWN         reduce using rule 42 (estatuto -> empty .)
    PUNTOYCOMA      reduce using rule 42 (estatuto -> empty .)

  ! R_LLAVE         [ reduce using rule 42 (estatuto -> empty .) ]
  ! PUNTOYCOMA      [ reduce using rule 63 (funciones_especiales -> empty .) ]


state 50

    (29) bloqueU -> estatuto . bloqueD empty
    (31) bloqueD -> . bloqueU empty
    (32) bloqueD -> . empty
    (29) bloqueU -> . estatuto bloqueD empty
    (30) bloqueU -> . empty
    (103) empty -> .
    (33) estatuto -> . asignacion PUNTOYCOMA empty
    (34) estatuto -> . llamada PUNTOYCOMA empty
    (35) estatuto -> . retorno PUNTOYCOMA empty
    (36) estatuto -> . lectura PUNTOYCOMA empty
    (37) estatuto -> . escritura PUNTOYCOMA empty
    (38) estatuto -> . decision empty
    (39) estatuto -> . condicional empty
    (40) estatuto -> . no_condicional empty
    (41) estatuto -> . funciones_especiales PUNTOYCOMA empty
    (42) estatuto -> . empty
    (43) asignacion -> . ID IGUAL hiper_exp empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty
    (45) retorno -> . REGRESA L_PAR ID R_PAR empty
    (46) lectura -> . LEER L_PAR ID R_PAR empty
    (47) escritura -> . ESCRIBIR L_PAR escrituraD R_PAR empty
    (50) decision -> . SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty
    (53) condicional -> . MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty
    (54) no_condicional -> . DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty
    (55) funciones_especiales -> . circulo empty
    (56) funciones_especiales -> . color empty
    (57) funciones_especiales -> . grosor empty
    (58) funciones_especiales -> . linea empty
    (59) funciones_especiales -> . puntoxy empty
    (60) funciones_especiales -> . arco empty
    (61) funciones_especiales -> . penup empty
    (62) funciones_especiales -> . pendown empty
    (63) funciones_especiales -> . empty
    (64) circulo -> . CIRCULO L_PAR hiper_exp R_PAR empty
    (65) color -> . COLOR L_PAR hiper_exp R_PAR empty
    (66) grosor -> . GROSOR L_PAR hiper_exp R_PAR empty
    (67) linea -> . LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty
    (68) puntoxy -> . PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty
    (69) arco -> . ARCO L_PAR hiper_exp R_PAR empty
    (70) penup -> . PENUP L_PAR hiper_exp R_PAR empty
    (71) pendown -> . PENDOWN L_PAR hiper_exp R_PAR empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
  ! shift/reduce conflict for ESCRIBIR resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for CIRCULO resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for GROSOR resolved as shift
  ! shift/reduce conflict for LINEA resolved as shift
  ! shift/reduce conflict for PUNTOXY resolved as shift
  ! shift/reduce conflict for ARCO resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
    R_LLAVE         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    SI              shift and go to state 64
    MIENTRAS        shift and go to state 65
    DESDE           shift and go to state 66
    CIRCULO         shift and go to state 75
    COLOR           shift and go to state 76
    GROSOR          shift and go to state 77
    LINEA           shift and go to state 78
    PUNTOXY         shift and go to state 79
    ARCO            shift and go to state 80
    PENUP           shift and go to state 81
    PENDOWN         shift and go to state 82

  ! ID              [ reduce using rule 103 (empty -> .) ]
  ! REGRESA         [ reduce using rule 103 (empty -> .) ]
  ! LEER            [ reduce using rule 103 (empty -> .) ]
  ! ESCRIBIR        [ reduce using rule 103 (empty -> .) ]
  ! SI              [ reduce using rule 103 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 103 (empty -> .) ]
  ! DESDE           [ reduce using rule 103 (empty -> .) ]
  ! CIRCULO         [ reduce using rule 103 (empty -> .) ]
  ! COLOR           [ reduce using rule 103 (empty -> .) ]
  ! GROSOR          [ reduce using rule 103 (empty -> .) ]
  ! LINEA           [ reduce using rule 103 (empty -> .) ]
  ! PUNTOXY         [ reduce using rule 103 (empty -> .) ]
  ! ARCO            [ reduce using rule 103 (empty -> .) ]
  ! PENUP           [ reduce using rule 103 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 103 (empty -> .) ]

    estatuto                       shift and go to state 50
    bloqueD                        shift and go to state 88
    empty                          shift and go to state 89
    bloqueU                        shift and go to state 90
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    condicional                    shift and go to state 57
    no_condicional                 shift and go to state 58
    funciones_especiales           shift and go to state 59
    circulo                        shift and go to state 67
    color                          shift and go to state 68
    grosor                         shift and go to state 69
    linea                          shift and go to state 70
    puntoxy                        shift and go to state 71
    arco                           shift and go to state 72
    penup                          shift and go to state 73
    pendown                        shift and go to state 74

state 51

    (33) estatuto -> asignacion . PUNTOYCOMA empty

    PUNTOYCOMA      shift and go to state 91


state 52

    (34) estatuto -> llamada . PUNTOYCOMA empty

    PUNTOYCOMA      shift and go to state 92


state 53

    (35) estatuto -> retorno . PUNTOYCOMA empty

    PUNTOYCOMA      shift and go to state 93


state 54

    (36) estatuto -> lectura . PUNTOYCOMA empty

    PUNTOYCOMA      shift and go to state 94


state 55

    (37) estatuto -> escritura . PUNTOYCOMA empty

    PUNTOYCOMA      shift and go to state 95


state 56

    (38) estatuto -> decision . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 96

state 57

    (39) estatuto -> condicional . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 97

state 58

    (40) estatuto -> no_condicional . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 98

state 59

    (41) estatuto -> funciones_especiales . PUNTOYCOMA empty

    PUNTOYCOMA      shift and go to state 99


state 60

    (43) asignacion -> ID . IGUAL hiper_exp empty
    (44) llamada -> ID . L_PAR mandar_parametros R_PAR empty

    IGUAL           shift and go to state 100
    L_PAR           shift and go to state 101


state 61

    (45) retorno -> REGRESA . L_PAR ID R_PAR empty

    L_PAR           shift and go to state 102


state 62

    (46) lectura -> LEER . L_PAR ID R_PAR empty

    L_PAR           shift and go to state 103


state 63

    (47) escritura -> ESCRIBIR . L_PAR escrituraD R_PAR empty

    L_PAR           shift and go to state 104


state 64

    (50) decision -> SI . L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty

    L_PAR           shift and go to state 105


state 65

    (53) condicional -> MIENTRAS . L_PAR hiper_exp R_PAR HACER bloque empty

    L_PAR           shift and go to state 106


state 66

    (54) no_condicional -> DESDE . L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty

    L_PAR           shift and go to state 107


state 67

    (55) funciones_especiales -> circulo . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 108

state 68

    (56) funciones_especiales -> color . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 109

state 69

    (57) funciones_especiales -> grosor . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 110

state 70

    (58) funciones_especiales -> linea . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 111

state 71

    (59) funciones_especiales -> puntoxy . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 112

state 72

    (60) funciones_especiales -> arco . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 113

state 73

    (61) funciones_especiales -> penup . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 114

state 74

    (62) funciones_especiales -> pendown . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 115

state 75

    (64) circulo -> CIRCULO . L_PAR hiper_exp R_PAR empty

    L_PAR           shift and go to state 116


state 76

    (65) color -> COLOR . L_PAR hiper_exp R_PAR empty

    L_PAR           shift and go to state 117


state 77

    (66) grosor -> GROSOR . L_PAR hiper_exp R_PAR empty

    L_PAR           shift and go to state 118


state 78

    (67) linea -> LINEA . L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty

    L_PAR           shift and go to state 119


state 79

    (68) puntoxy -> PUNTOXY . L_PAR hiper_exp COMA hiper_exp R_PAR empty

    L_PAR           shift and go to state 120


state 80

    (69) arco -> ARCO . L_PAR hiper_exp R_PAR empty

    L_PAR           shift and go to state 121


state 81

    (70) penup -> PENUP . L_PAR hiper_exp R_PAR empty

    L_PAR           shift and go to state 122


state 82

    (71) pendown -> PENDOWN . L_PAR hiper_exp R_PAR empty

    L_PAR           shift and go to state 123


state 83

    (20) recibir_parametros -> ID . DOSPUNTOS tipo_var recibir_parametrosD empty

    DOSPUNTOS       shift and go to state 124


state 84

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros . R_PAR variables bloque funcionesD

    R_PAR           shift and go to state 125


state 85

    (21) recibir_parametros -> empty .

    R_PAR           reduce using rule 21 (recibir_parametros -> empty .)


state 86

    (7) variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .

    ENTERO          reduce using rule 7 (variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .)
    FLOTANTE        reduce using rule 7 (variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .)
    CARACTER        reduce using rule 7 (variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .)
    VOID            reduce using rule 7 (variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .)
    PRINCIPAL       reduce using rule 7 (variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .)
    L_LLAVE         reduce using rule 7 (variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU .)


state 87

    (28) bloque -> L_LLAVE bloqueU R_LLAVE . empty
    (103) empty -> .

    $end            reduce using rule 103 (empty -> .)
    ENTERO          reduce using rule 103 (empty -> .)
    FLOTANTE        reduce using rule 103 (empty -> .)
    CARACTER        reduce using rule 103 (empty -> .)
    VOID            reduce using rule 103 (empty -> .)
    PRINCIPAL       reduce using rule 103 (empty -> .)
    SINO            reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 126

state 88

    (29) bloqueU -> estatuto bloqueD . empty
    (103) empty -> .

    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 127

state 89

    (32) bloqueD -> empty .
    (30) bloqueU -> empty .
    (42) estatuto -> empty .
    (63) funciones_especiales -> empty .

  ! reduce/reduce conflict for R_LLAVE resolved using rule 30 (bloqueU -> empty .)
  ! reduce/reduce conflict for R_LLAVE resolved using rule 30 (bloqueU -> empty .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 42 (estatuto -> empty .)
    R_LLAVE         reduce using rule 30 (bloqueU -> empty .)
    ID              reduce using rule 42 (estatuto -> empty .)
    REGRESA         reduce using rule 42 (estatuto -> empty .)
    LEER            reduce using rule 42 (estatuto -> empty .)
    ESCRIBIR        reduce using rule 42 (estatuto -> empty .)
    SI              reduce using rule 42 (estatuto -> empty .)
    MIENTRAS        reduce using rule 42 (estatuto -> empty .)
    DESDE           reduce using rule 42 (estatuto -> empty .)
    CIRCULO         reduce using rule 42 (estatuto -> empty .)
    COLOR           reduce using rule 42 (estatuto -> empty .)
    GROSOR          reduce using rule 42 (estatuto -> empty .)
    LINEA           reduce using rule 42 (estatuto -> empty .)
    PUNTOXY         reduce using rule 42 (estatuto -> empty .)
    ARCO            reduce using rule 42 (estatuto -> empty .)
    PENUP           reduce using rule 42 (estatuto -> empty .)
    PENDOWN         reduce using rule 42 (estatuto -> empty .)
    PUNTOYCOMA      reduce using rule 42 (estatuto -> empty .)

  ! R_LLAVE         [ reduce using rule 32 (bloqueD -> empty .) ]
  ! R_LLAVE         [ reduce using rule 42 (estatuto -> empty .) ]
  ! PUNTOYCOMA      [ reduce using rule 63 (funciones_especiales -> empty .) ]


state 90

    (31) bloqueD -> bloqueU . empty
    (103) empty -> .

    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 128

state 91

    (33) estatuto -> asignacion PUNTOYCOMA . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 129

state 92

    (34) estatuto -> llamada PUNTOYCOMA . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 130

state 93

    (35) estatuto -> retorno PUNTOYCOMA . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 131

state 94

    (36) estatuto -> lectura PUNTOYCOMA . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 132

state 95

    (37) estatuto -> escritura PUNTOYCOMA . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 133

state 96

    (38) estatuto -> decision empty .

    ID              reduce using rule 38 (estatuto -> decision empty .)
    REGRESA         reduce using rule 38 (estatuto -> decision empty .)
    LEER            reduce using rule 38 (estatuto -> decision empty .)
    ESCRIBIR        reduce using rule 38 (estatuto -> decision empty .)
    SI              reduce using rule 38 (estatuto -> decision empty .)
    MIENTRAS        reduce using rule 38 (estatuto -> decision empty .)
    DESDE           reduce using rule 38 (estatuto -> decision empty .)
    CIRCULO         reduce using rule 38 (estatuto -> decision empty .)
    COLOR           reduce using rule 38 (estatuto -> decision empty .)
    GROSOR          reduce using rule 38 (estatuto -> decision empty .)
    LINEA           reduce using rule 38 (estatuto -> decision empty .)
    PUNTOXY         reduce using rule 38 (estatuto -> decision empty .)
    ARCO            reduce using rule 38 (estatuto -> decision empty .)
    PENUP           reduce using rule 38 (estatuto -> decision empty .)
    PENDOWN         reduce using rule 38 (estatuto -> decision empty .)
    PUNTOYCOMA      reduce using rule 38 (estatuto -> decision empty .)
    R_LLAVE         reduce using rule 38 (estatuto -> decision empty .)


state 97

    (39) estatuto -> condicional empty .

    ID              reduce using rule 39 (estatuto -> condicional empty .)
    REGRESA         reduce using rule 39 (estatuto -> condicional empty .)
    LEER            reduce using rule 39 (estatuto -> condicional empty .)
    ESCRIBIR        reduce using rule 39 (estatuto -> condicional empty .)
    SI              reduce using rule 39 (estatuto -> condicional empty .)
    MIENTRAS        reduce using rule 39 (estatuto -> condicional empty .)
    DESDE           reduce using rule 39 (estatuto -> condicional empty .)
    CIRCULO         reduce using rule 39 (estatuto -> condicional empty .)
    COLOR           reduce using rule 39 (estatuto -> condicional empty .)
    GROSOR          reduce using rule 39 (estatuto -> condicional empty .)
    LINEA           reduce using rule 39 (estatuto -> condicional empty .)
    PUNTOXY         reduce using rule 39 (estatuto -> condicional empty .)
    ARCO            reduce using rule 39 (estatuto -> condicional empty .)
    PENUP           reduce using rule 39 (estatuto -> condicional empty .)
    PENDOWN         reduce using rule 39 (estatuto -> condicional empty .)
    PUNTOYCOMA      reduce using rule 39 (estatuto -> condicional empty .)
    R_LLAVE         reduce using rule 39 (estatuto -> condicional empty .)


state 98

    (40) estatuto -> no_condicional empty .

    ID              reduce using rule 40 (estatuto -> no_condicional empty .)
    REGRESA         reduce using rule 40 (estatuto -> no_condicional empty .)
    LEER            reduce using rule 40 (estatuto -> no_condicional empty .)
    ESCRIBIR        reduce using rule 40 (estatuto -> no_condicional empty .)
    SI              reduce using rule 40 (estatuto -> no_condicional empty .)
    MIENTRAS        reduce using rule 40 (estatuto -> no_condicional empty .)
    DESDE           reduce using rule 40 (estatuto -> no_condicional empty .)
    CIRCULO         reduce using rule 40 (estatuto -> no_condicional empty .)
    COLOR           reduce using rule 40 (estatuto -> no_condicional empty .)
    GROSOR          reduce using rule 40 (estatuto -> no_condicional empty .)
    LINEA           reduce using rule 40 (estatuto -> no_condicional empty .)
    PUNTOXY         reduce using rule 40 (estatuto -> no_condicional empty .)
    ARCO            reduce using rule 40 (estatuto -> no_condicional empty .)
    PENUP           reduce using rule 40 (estatuto -> no_condicional empty .)
    PENDOWN         reduce using rule 40 (estatuto -> no_condicional empty .)
    PUNTOYCOMA      reduce using rule 40 (estatuto -> no_condicional empty .)
    R_LLAVE         reduce using rule 40 (estatuto -> no_condicional empty .)


state 99

    (41) estatuto -> funciones_especiales PUNTOYCOMA . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 134

state 100

    (43) asignacion -> ID IGUAL . hiper_exp empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 136
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 101

    (44) llamada -> ID L_PAR . mandar_parametros R_PAR empty
    (24) mandar_parametros -> . ID mandar_parametrosD empty
    (25) mandar_parametros -> . empty
    (103) empty -> .

    ID              shift and go to state 147
    R_PAR           reduce using rule 103 (empty -> .)

    mandar_parametros              shift and go to state 148
    empty                          shift and go to state 149

state 102

    (45) retorno -> REGRESA L_PAR . ID R_PAR empty

    ID              shift and go to state 150


state 103

    (46) lectura -> LEER L_PAR . ID R_PAR empty

    ID              shift and go to state 151


state 104

    (47) escritura -> ESCRIBIR L_PAR . escrituraD R_PAR empty
    (48) escrituraD -> . hiper_exp empty
    (49) escrituraD -> . LETRERO empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    LETRERO         shift and go to state 154
    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    escrituraD                     shift and go to state 152
    hiper_exp                      shift and go to state 153
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 105

    (50) decision -> SI L_PAR . hiper_exp R_PAR ENTONCES bloque decisionU empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 155
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 106

    (53) condicional -> MIENTRAS L_PAR . hiper_exp R_PAR HACER bloque empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 156
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 107

    (54) no_condicional -> DESDE L_PAR . asignacion R_PAR HASTA hiper_exp HACER bloque empty
    (43) asignacion -> . ID IGUAL hiper_exp empty

    ID              shift and go to state 158

    asignacion                     shift and go to state 157

state 108

    (55) funciones_especiales -> circulo empty .

    PUNTOYCOMA      reduce using rule 55 (funciones_especiales -> circulo empty .)


state 109

    (56) funciones_especiales -> color empty .

    PUNTOYCOMA      reduce using rule 56 (funciones_especiales -> color empty .)


state 110

    (57) funciones_especiales -> grosor empty .

    PUNTOYCOMA      reduce using rule 57 (funciones_especiales -> grosor empty .)


state 111

    (58) funciones_especiales -> linea empty .

    PUNTOYCOMA      reduce using rule 58 (funciones_especiales -> linea empty .)


state 112

    (59) funciones_especiales -> puntoxy empty .

    PUNTOYCOMA      reduce using rule 59 (funciones_especiales -> puntoxy empty .)


state 113

    (60) funciones_especiales -> arco empty .

    PUNTOYCOMA      reduce using rule 60 (funciones_especiales -> arco empty .)


state 114

    (61) funciones_especiales -> penup empty .

    PUNTOYCOMA      reduce using rule 61 (funciones_especiales -> penup empty .)


state 115

    (62) funciones_especiales -> pendown empty .

    PUNTOYCOMA      reduce using rule 62 (funciones_especiales -> pendown empty .)


state 116

    (64) circulo -> CIRCULO L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 159
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 117

    (65) color -> COLOR L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 160
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 118

    (66) grosor -> GROSOR L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 161
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 119

    (67) linea -> LINEA L_PAR . hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 162
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 120

    (68) puntoxy -> PUNTOXY L_PAR . hiper_exp COMA hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 163
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 121

    (69) arco -> ARCO L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 164
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 122

    (70) penup -> PENUP L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 165
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 123

    (71) pendown -> PENDOWN L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 166
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 124

    (20) recibir_parametros -> ID DOSPUNTOS . tipo_var recibir_parametrosD empty
    (17) tipo_var -> . ENTERO empty
    (18) tipo_var -> . FLOTANTE empty
    (19) tipo_var -> . CARACTER empty

    ENTERO          shift and go to state 33
    FLOTANTE        shift and go to state 34
    CARACTER        shift and go to state 35

    tipo_var                       shift and go to state 167

state 125

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR . variables bloque funcionesD
    (2) variables -> . VARIABLES variablesU
    (3) variables -> . empty
    (103) empty -> .

    VARIABLES       shift and go to state 8
    L_LLAVE         reduce using rule 103 (empty -> .)

    variables                      shift and go to state 168
    empty                          shift and go to state 7

state 126

    (28) bloque -> L_LLAVE bloqueU R_LLAVE empty .

    $end            reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    ENTERO          reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    FLOTANTE        reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    CARACTER        reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    VOID            reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    PRINCIPAL       reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    SINO            reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    ID              reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    REGRESA         reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    LEER            reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    ESCRIBIR        reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    SI              reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    MIENTRAS        reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    DESDE           reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    CIRCULO         reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    COLOR           reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    GROSOR          reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    LINEA           reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    PUNTOXY         reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    ARCO            reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    PENUP           reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    PENDOWN         reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    PUNTOYCOMA      reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)
    R_LLAVE         reduce using rule 28 (bloque -> L_LLAVE bloqueU R_LLAVE empty .)


state 127

    (29) bloqueU -> estatuto bloqueD empty .

    R_LLAVE         reduce using rule 29 (bloqueU -> estatuto bloqueD empty .)


state 128

    (31) bloqueD -> bloqueU empty .

    R_LLAVE         reduce using rule 31 (bloqueD -> bloqueU empty .)


state 129

    (33) estatuto -> asignacion PUNTOYCOMA empty .

    ID              reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    REGRESA         reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    LEER            reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    ESCRIBIR        reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    SI              reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    MIENTRAS        reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    DESDE           reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    CIRCULO         reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    COLOR           reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    GROSOR          reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    LINEA           reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    PUNTOXY         reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    ARCO            reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    PENUP           reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    PENDOWN         reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    PUNTOYCOMA      reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)
    R_LLAVE         reduce using rule 33 (estatuto -> asignacion PUNTOYCOMA empty .)


state 130

    (34) estatuto -> llamada PUNTOYCOMA empty .

    ID              reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    REGRESA         reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    LEER            reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    ESCRIBIR        reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    SI              reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    MIENTRAS        reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    DESDE           reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    CIRCULO         reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    COLOR           reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    GROSOR          reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    LINEA           reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    PUNTOXY         reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    ARCO            reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    PENUP           reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    PENDOWN         reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    PUNTOYCOMA      reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)
    R_LLAVE         reduce using rule 34 (estatuto -> llamada PUNTOYCOMA empty .)


state 131

    (35) estatuto -> retorno PUNTOYCOMA empty .

    ID              reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    REGRESA         reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    LEER            reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    ESCRIBIR        reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    SI              reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    MIENTRAS        reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    DESDE           reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    CIRCULO         reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    COLOR           reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    GROSOR          reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    LINEA           reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    PUNTOXY         reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    ARCO            reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    PENUP           reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    PENDOWN         reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    PUNTOYCOMA      reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)
    R_LLAVE         reduce using rule 35 (estatuto -> retorno PUNTOYCOMA empty .)


state 132

    (36) estatuto -> lectura PUNTOYCOMA empty .

    ID              reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    REGRESA         reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    LEER            reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    ESCRIBIR        reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    SI              reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    MIENTRAS        reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    DESDE           reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    CIRCULO         reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    COLOR           reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    GROSOR          reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    LINEA           reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    PUNTOXY         reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    ARCO            reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    PENUP           reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    PENDOWN         reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    PUNTOYCOMA      reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)
    R_LLAVE         reduce using rule 36 (estatuto -> lectura PUNTOYCOMA empty .)


state 133

    (37) estatuto -> escritura PUNTOYCOMA empty .

    ID              reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    REGRESA         reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    LEER            reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    ESCRIBIR        reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    SI              reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    MIENTRAS        reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    DESDE           reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    CIRCULO         reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    COLOR           reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    GROSOR          reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    LINEA           reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    PUNTOXY         reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    ARCO            reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    PENUP           reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    PENDOWN         reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    PUNTOYCOMA      reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)
    R_LLAVE         reduce using rule 37 (estatuto -> escritura PUNTOYCOMA empty .)


state 134

    (41) estatuto -> funciones_especiales PUNTOYCOMA empty .

    ID              reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    REGRESA         reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    LEER            reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    ESCRIBIR        reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    SI              reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    MIENTRAS        reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    DESDE           reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    CIRCULO         reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    COLOR           reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    GROSOR          reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    LINEA           reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    PUNTOXY         reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    ARCO            reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    PENUP           reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    PENDOWN         reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    PUNTOYCOMA      reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)
    R_LLAVE         reduce using rule 41 (estatuto -> funciones_especiales PUNTOYCOMA empty .)


state 135

    (99) varcte -> ID . empty
    (44) llamada -> ID . L_PAR mandar_parametros R_PAR empty
    (103) empty -> .

    L_PAR           shift and go to state 101
    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 169

state 136

    (43) asignacion -> ID IGUAL hiper_exp . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 170

state 137

    (84) hiper_exp -> super_exp . hiper_expU
    (85) hiper_expU -> . operadorL hiper_exp empty
    (86) hiper_expU -> . empty
    (76) operadorL -> . OR empty
    (77) operadorL -> . AND empty
    (103) empty -> .

    OR              shift and go to state 174
    AND             shift and go to state 175
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    hiper_expU                     shift and go to state 171
    operadorL                      shift and go to state 172
    empty                          shift and go to state 173

state 138

    (87) super_exp -> exp . super_expU
    (88) super_expU -> . operadorR exp empty
    (89) super_expU -> . empty
    (78) operadorR -> . MENORQUE empty
    (79) operadorR -> . MAYORQUE empty
    (80) operadorR -> . MENORIGUALQUE empty
    (81) operadorR -> . MAYORIGUALQUE empty
    (82) operadorR -> . IGUALQUE empty
    (83) operadorR -> . DIFQUE empty
    (103) empty -> .

    MENORQUE        shift and go to state 179
    MAYORQUE        shift and go to state 180
    MENORIGUALQUE   shift and go to state 181
    MAYORIGUALQUE   shift and go to state 182
    IGUALQUE        shift and go to state 183
    DIFQUE          shift and go to state 184
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    super_expU                     shift and go to state 176
    operadorR                      shift and go to state 177
    empty                          shift and go to state 178

state 139

    (90) exp -> termino . expU
    (91) expU -> . operadorA exp
    (92) expU -> . empty
    (72) operadorA -> . MAS empty
    (73) operadorA -> . MENOS empty
    (103) empty -> .

    MAS             shift and go to state 188
    MENOS           shift and go to state 189
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    expU                           shift and go to state 185
    operadorA                      shift and go to state 186
    empty                          shift and go to state 187

state 140

    (93) termino -> factor . terminoU
    (94) terminoU -> . operadorT termino
    (95) terminoU -> . empty
    (74) operadorT -> . MULT empty
    (75) operadorT -> . DIV empty
    (103) empty -> .

    MULT            shift and go to state 193
    DIV             shift and go to state 194
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    terminoU                       shift and go to state 190
    operadorT                      shift and go to state 191
    empty                          shift and go to state 192

state 141

    (96) factor -> varcte . empty
    (103) empty -> .

    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 195

state 142

    (97) factor -> llamada . empty
    (103) empty -> .

    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 196

state 143

    (98) factor -> L_PAR . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 197
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 144

    (100) varcte -> ENTEROVAL . empty
    (103) empty -> .

    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 198

state 145

    (101) varcte -> FLOTANTEVAL . empty
    (103) empty -> .

    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 199

state 146

    (102) varcte -> CARACTERVAL . empty
    (103) empty -> .

    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 200

state 147

    (24) mandar_parametros -> ID . mandar_parametrosD empty
    (26) mandar_parametrosD -> . COMA mandar_parametros empty
    (27) mandar_parametrosD -> . empty
    (103) empty -> .

    COMA            shift and go to state 203
    R_PAR           reduce using rule 103 (empty -> .)

    mandar_parametrosD             shift and go to state 201
    empty                          shift and go to state 202

state 148

    (44) llamada -> ID L_PAR mandar_parametros . R_PAR empty

    R_PAR           shift and go to state 204


state 149

    (25) mandar_parametros -> empty .

    R_PAR           reduce using rule 25 (mandar_parametros -> empty .)


state 150

    (45) retorno -> REGRESA L_PAR ID . R_PAR empty

    R_PAR           shift and go to state 205


state 151

    (46) lectura -> LEER L_PAR ID . R_PAR empty

    R_PAR           shift and go to state 206


state 152

    (47) escritura -> ESCRIBIR L_PAR escrituraD . R_PAR empty

    R_PAR           shift and go to state 207


state 153

    (48) escrituraD -> hiper_exp . empty
    (103) empty -> .

    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 208

state 154

    (49) escrituraD -> LETRERO . empty
    (103) empty -> .

    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 209

state 155

    (50) decision -> SI L_PAR hiper_exp . R_PAR ENTONCES bloque decisionU empty

    R_PAR           shift and go to state 210


state 156

    (53) condicional -> MIENTRAS L_PAR hiper_exp . R_PAR HACER bloque empty

    R_PAR           shift and go to state 211


state 157

    (54) no_condicional -> DESDE L_PAR asignacion . R_PAR HASTA hiper_exp HACER bloque empty

    R_PAR           shift and go to state 212


state 158

    (43) asignacion -> ID . IGUAL hiper_exp empty

    IGUAL           shift and go to state 100


state 159

    (64) circulo -> CIRCULO L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 213


state 160

    (65) color -> COLOR L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 214


state 161

    (66) grosor -> GROSOR L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 215


state 162

    (67) linea -> LINEA L_PAR hiper_exp . COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty

    COMA            shift and go to state 216


state 163

    (68) puntoxy -> PUNTOXY L_PAR hiper_exp . COMA hiper_exp R_PAR empty

    COMA            shift and go to state 217


state 164

    (69) arco -> ARCO L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 218


state 165

    (70) penup -> PENUP L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 219


state 166

    (71) pendown -> PENDOWN L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 220


state 167

    (20) recibir_parametros -> ID DOSPUNTOS tipo_var . recibir_parametrosD empty
    (22) recibir_parametrosD -> . COMA recibir_parametros empty
    (23) recibir_parametrosD -> . empty
    (103) empty -> .

    COMA            shift and go to state 223
    R_PAR           reduce using rule 103 (empty -> .)

    recibir_parametrosD            shift and go to state 221
    empty                          shift and go to state 222

state 168

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables . bloque funcionesD
    (28) bloque -> . L_LLAVE bloqueU R_LLAVE empty

    L_LLAVE         shift and go to state 44

    bloque                         shift and go to state 224

state 169

    (99) varcte -> ID empty .

    MULT            reduce using rule 99 (varcte -> ID empty .)
    DIV             reduce using rule 99 (varcte -> ID empty .)
    MAS             reduce using rule 99 (varcte -> ID empty .)
    MENOS           reduce using rule 99 (varcte -> ID empty .)
    MENORQUE        reduce using rule 99 (varcte -> ID empty .)
    MAYORQUE        reduce using rule 99 (varcte -> ID empty .)
    MENORIGUALQUE   reduce using rule 99 (varcte -> ID empty .)
    MAYORIGUALQUE   reduce using rule 99 (varcte -> ID empty .)
    IGUALQUE        reduce using rule 99 (varcte -> ID empty .)
    DIFQUE          reduce using rule 99 (varcte -> ID empty .)
    OR              reduce using rule 99 (varcte -> ID empty .)
    AND             reduce using rule 99 (varcte -> ID empty .)
    PUNTOYCOMA      reduce using rule 99 (varcte -> ID empty .)
    R_PAR           reduce using rule 99 (varcte -> ID empty .)
    COMA            reduce using rule 99 (varcte -> ID empty .)
    HACER           reduce using rule 99 (varcte -> ID empty .)


state 170

    (43) asignacion -> ID IGUAL hiper_exp empty .

    PUNTOYCOMA      reduce using rule 43 (asignacion -> ID IGUAL hiper_exp empty .)
    R_PAR           reduce using rule 43 (asignacion -> ID IGUAL hiper_exp empty .)


state 171

    (84) hiper_exp -> super_exp hiper_expU .

    PUNTOYCOMA      reduce using rule 84 (hiper_exp -> super_exp hiper_expU .)
    R_PAR           reduce using rule 84 (hiper_exp -> super_exp hiper_expU .)
    COMA            reduce using rule 84 (hiper_exp -> super_exp hiper_expU .)
    HACER           reduce using rule 84 (hiper_exp -> super_exp hiper_expU .)


state 172

    (85) hiper_expU -> operadorL . hiper_exp empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 225
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 173

    (86) hiper_expU -> empty .

    PUNTOYCOMA      reduce using rule 86 (hiper_expU -> empty .)
    R_PAR           reduce using rule 86 (hiper_expU -> empty .)
    COMA            reduce using rule 86 (hiper_expU -> empty .)
    HACER           reduce using rule 86 (hiper_expU -> empty .)


state 174

    (76) operadorL -> OR . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 226

state 175

    (77) operadorL -> AND . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 227

state 176

    (87) super_exp -> exp super_expU .

    OR              reduce using rule 87 (super_exp -> exp super_expU .)
    AND             reduce using rule 87 (super_exp -> exp super_expU .)
    PUNTOYCOMA      reduce using rule 87 (super_exp -> exp super_expU .)
    R_PAR           reduce using rule 87 (super_exp -> exp super_expU .)
    COMA            reduce using rule 87 (super_exp -> exp super_expU .)
    HACER           reduce using rule 87 (super_exp -> exp super_expU .)


state 177

    (88) super_expU -> operadorR . exp empty
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    exp                            shift and go to state 228
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 178

    (89) super_expU -> empty .

    OR              reduce using rule 89 (super_expU -> empty .)
    AND             reduce using rule 89 (super_expU -> empty .)
    PUNTOYCOMA      reduce using rule 89 (super_expU -> empty .)
    R_PAR           reduce using rule 89 (super_expU -> empty .)
    COMA            reduce using rule 89 (super_expU -> empty .)
    HACER           reduce using rule 89 (super_expU -> empty .)


state 179

    (78) operadorR -> MENORQUE . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 229

state 180

    (79) operadorR -> MAYORQUE . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 230

state 181

    (80) operadorR -> MENORIGUALQUE . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 231

state 182

    (81) operadorR -> MAYORIGUALQUE . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 232

state 183

    (82) operadorR -> IGUALQUE . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 233

state 184

    (83) operadorR -> DIFQUE . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 234

state 185

    (90) exp -> termino expU .

    MENORQUE        reduce using rule 90 (exp -> termino expU .)
    MAYORQUE        reduce using rule 90 (exp -> termino expU .)
    MENORIGUALQUE   reduce using rule 90 (exp -> termino expU .)
    MAYORIGUALQUE   reduce using rule 90 (exp -> termino expU .)
    IGUALQUE        reduce using rule 90 (exp -> termino expU .)
    DIFQUE          reduce using rule 90 (exp -> termino expU .)
    OR              reduce using rule 90 (exp -> termino expU .)
    AND             reduce using rule 90 (exp -> termino expU .)
    PUNTOYCOMA      reduce using rule 90 (exp -> termino expU .)
    R_PAR           reduce using rule 90 (exp -> termino expU .)
    COMA            reduce using rule 90 (exp -> termino expU .)
    HACER           reduce using rule 90 (exp -> termino expU .)


state 186

    (91) expU -> operadorA . exp
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    exp                            shift and go to state 235
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 187

    (92) expU -> empty .

    MENORQUE        reduce using rule 92 (expU -> empty .)
    MAYORQUE        reduce using rule 92 (expU -> empty .)
    MENORIGUALQUE   reduce using rule 92 (expU -> empty .)
    MAYORIGUALQUE   reduce using rule 92 (expU -> empty .)
    IGUALQUE        reduce using rule 92 (expU -> empty .)
    DIFQUE          reduce using rule 92 (expU -> empty .)
    OR              reduce using rule 92 (expU -> empty .)
    AND             reduce using rule 92 (expU -> empty .)
    PUNTOYCOMA      reduce using rule 92 (expU -> empty .)
    R_PAR           reduce using rule 92 (expU -> empty .)
    COMA            reduce using rule 92 (expU -> empty .)
    HACER           reduce using rule 92 (expU -> empty .)


state 188

    (72) operadorA -> MAS . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 236

state 189

    (73) operadorA -> MENOS . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 237

state 190

    (93) termino -> factor terminoU .

    MAS             reduce using rule 93 (termino -> factor terminoU .)
    MENOS           reduce using rule 93 (termino -> factor terminoU .)
    MENORQUE        reduce using rule 93 (termino -> factor terminoU .)
    MAYORQUE        reduce using rule 93 (termino -> factor terminoU .)
    MENORIGUALQUE   reduce using rule 93 (termino -> factor terminoU .)
    MAYORIGUALQUE   reduce using rule 93 (termino -> factor terminoU .)
    IGUALQUE        reduce using rule 93 (termino -> factor terminoU .)
    DIFQUE          reduce using rule 93 (termino -> factor terminoU .)
    OR              reduce using rule 93 (termino -> factor terminoU .)
    AND             reduce using rule 93 (termino -> factor terminoU .)
    PUNTOYCOMA      reduce using rule 93 (termino -> factor terminoU .)
    R_PAR           reduce using rule 93 (termino -> factor terminoU .)
    COMA            reduce using rule 93 (termino -> factor terminoU .)
    HACER           reduce using rule 93 (termino -> factor terminoU .)


state 191

    (94) terminoU -> operadorT . termino
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    termino                        shift and go to state 238
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 192

    (95) terminoU -> empty .

    MAS             reduce using rule 95 (terminoU -> empty .)
    MENOS           reduce using rule 95 (terminoU -> empty .)
    MENORQUE        reduce using rule 95 (terminoU -> empty .)
    MAYORQUE        reduce using rule 95 (terminoU -> empty .)
    MENORIGUALQUE   reduce using rule 95 (terminoU -> empty .)
    MAYORIGUALQUE   reduce using rule 95 (terminoU -> empty .)
    IGUALQUE        reduce using rule 95 (terminoU -> empty .)
    DIFQUE          reduce using rule 95 (terminoU -> empty .)
    OR              reduce using rule 95 (terminoU -> empty .)
    AND             reduce using rule 95 (terminoU -> empty .)
    PUNTOYCOMA      reduce using rule 95 (terminoU -> empty .)
    R_PAR           reduce using rule 95 (terminoU -> empty .)
    COMA            reduce using rule 95 (terminoU -> empty .)
    HACER           reduce using rule 95 (terminoU -> empty .)


state 193

    (74) operadorT -> MULT . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 239

state 194

    (75) operadorT -> DIV . empty
    (103) empty -> .

    L_PAR           reduce using rule 103 (empty -> .)
    ID              reduce using rule 103 (empty -> .)
    ENTEROVAL       reduce using rule 103 (empty -> .)
    FLOTANTEVAL     reduce using rule 103 (empty -> .)
    CARACTERVAL     reduce using rule 103 (empty -> .)

    empty                          shift and go to state 240

state 195

    (96) factor -> varcte empty .

    MULT            reduce using rule 96 (factor -> varcte empty .)
    DIV             reduce using rule 96 (factor -> varcte empty .)
    MAS             reduce using rule 96 (factor -> varcte empty .)
    MENOS           reduce using rule 96 (factor -> varcte empty .)
    MENORQUE        reduce using rule 96 (factor -> varcte empty .)
    MAYORQUE        reduce using rule 96 (factor -> varcte empty .)
    MENORIGUALQUE   reduce using rule 96 (factor -> varcte empty .)
    MAYORIGUALQUE   reduce using rule 96 (factor -> varcte empty .)
    IGUALQUE        reduce using rule 96 (factor -> varcte empty .)
    DIFQUE          reduce using rule 96 (factor -> varcte empty .)
    OR              reduce using rule 96 (factor -> varcte empty .)
    AND             reduce using rule 96 (factor -> varcte empty .)
    PUNTOYCOMA      reduce using rule 96 (factor -> varcte empty .)
    R_PAR           reduce using rule 96 (factor -> varcte empty .)
    COMA            reduce using rule 96 (factor -> varcte empty .)
    HACER           reduce using rule 96 (factor -> varcte empty .)


state 196

    (97) factor -> llamada empty .

    MULT            reduce using rule 97 (factor -> llamada empty .)
    DIV             reduce using rule 97 (factor -> llamada empty .)
    MAS             reduce using rule 97 (factor -> llamada empty .)
    MENOS           reduce using rule 97 (factor -> llamada empty .)
    MENORQUE        reduce using rule 97 (factor -> llamada empty .)
    MAYORQUE        reduce using rule 97 (factor -> llamada empty .)
    MENORIGUALQUE   reduce using rule 97 (factor -> llamada empty .)
    MAYORIGUALQUE   reduce using rule 97 (factor -> llamada empty .)
    IGUALQUE        reduce using rule 97 (factor -> llamada empty .)
    DIFQUE          reduce using rule 97 (factor -> llamada empty .)
    OR              reduce using rule 97 (factor -> llamada empty .)
    AND             reduce using rule 97 (factor -> llamada empty .)
    PUNTOYCOMA      reduce using rule 97 (factor -> llamada empty .)
    R_PAR           reduce using rule 97 (factor -> llamada empty .)
    COMA            reduce using rule 97 (factor -> llamada empty .)
    HACER           reduce using rule 97 (factor -> llamada empty .)


state 197

    (98) factor -> L_PAR hiper_exp . R_PAR empty

    R_PAR           shift and go to state 241


state 198

    (100) varcte -> ENTEROVAL empty .

    MULT            reduce using rule 100 (varcte -> ENTEROVAL empty .)
    DIV             reduce using rule 100 (varcte -> ENTEROVAL empty .)
    MAS             reduce using rule 100 (varcte -> ENTEROVAL empty .)
    MENOS           reduce using rule 100 (varcte -> ENTEROVAL empty .)
    MENORQUE        reduce using rule 100 (varcte -> ENTEROVAL empty .)
    MAYORQUE        reduce using rule 100 (varcte -> ENTEROVAL empty .)
    MENORIGUALQUE   reduce using rule 100 (varcte -> ENTEROVAL empty .)
    MAYORIGUALQUE   reduce using rule 100 (varcte -> ENTEROVAL empty .)
    IGUALQUE        reduce using rule 100 (varcte -> ENTEROVAL empty .)
    DIFQUE          reduce using rule 100 (varcte -> ENTEROVAL empty .)
    OR              reduce using rule 100 (varcte -> ENTEROVAL empty .)
    AND             reduce using rule 100 (varcte -> ENTEROVAL empty .)
    PUNTOYCOMA      reduce using rule 100 (varcte -> ENTEROVAL empty .)
    R_PAR           reduce using rule 100 (varcte -> ENTEROVAL empty .)
    COMA            reduce using rule 100 (varcte -> ENTEROVAL empty .)
    HACER           reduce using rule 100 (varcte -> ENTEROVAL empty .)


state 199

    (101) varcte -> FLOTANTEVAL empty .

    MULT            reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    DIV             reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    MAS             reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    MENOS           reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    MENORQUE        reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    MAYORQUE        reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    MENORIGUALQUE   reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    MAYORIGUALQUE   reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    IGUALQUE        reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    DIFQUE          reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    OR              reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    AND             reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    PUNTOYCOMA      reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    R_PAR           reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    COMA            reduce using rule 101 (varcte -> FLOTANTEVAL empty .)
    HACER           reduce using rule 101 (varcte -> FLOTANTEVAL empty .)


state 200

    (102) varcte -> CARACTERVAL empty .

    MULT            reduce using rule 102 (varcte -> CARACTERVAL empty .)
    DIV             reduce using rule 102 (varcte -> CARACTERVAL empty .)
    MAS             reduce using rule 102 (varcte -> CARACTERVAL empty .)
    MENOS           reduce using rule 102 (varcte -> CARACTERVAL empty .)
    MENORQUE        reduce using rule 102 (varcte -> CARACTERVAL empty .)
    MAYORQUE        reduce using rule 102 (varcte -> CARACTERVAL empty .)
    MENORIGUALQUE   reduce using rule 102 (varcte -> CARACTERVAL empty .)
    MAYORIGUALQUE   reduce using rule 102 (varcte -> CARACTERVAL empty .)
    IGUALQUE        reduce using rule 102 (varcte -> CARACTERVAL empty .)
    DIFQUE          reduce using rule 102 (varcte -> CARACTERVAL empty .)
    OR              reduce using rule 102 (varcte -> CARACTERVAL empty .)
    AND             reduce using rule 102 (varcte -> CARACTERVAL empty .)
    PUNTOYCOMA      reduce using rule 102 (varcte -> CARACTERVAL empty .)
    R_PAR           reduce using rule 102 (varcte -> CARACTERVAL empty .)
    COMA            reduce using rule 102 (varcte -> CARACTERVAL empty .)
    HACER           reduce using rule 102 (varcte -> CARACTERVAL empty .)


state 201

    (24) mandar_parametros -> ID mandar_parametrosD . empty
    (103) empty -> .

    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 242

state 202

    (27) mandar_parametrosD -> empty .

    R_PAR           reduce using rule 27 (mandar_parametrosD -> empty .)


state 203

    (26) mandar_parametrosD -> COMA . mandar_parametros empty
    (24) mandar_parametros -> . ID mandar_parametrosD empty
    (25) mandar_parametros -> . empty
    (103) empty -> .

    ID              shift and go to state 147
    R_PAR           reduce using rule 103 (empty -> .)

    mandar_parametros              shift and go to state 243
    empty                          shift and go to state 149

state 204

    (44) llamada -> ID L_PAR mandar_parametros R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 244

state 205

    (45) retorno -> REGRESA L_PAR ID R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 245

state 206

    (46) lectura -> LEER L_PAR ID R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 246

state 207

    (47) escritura -> ESCRIBIR L_PAR escrituraD R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 247

state 208

    (48) escrituraD -> hiper_exp empty .

    R_PAR           reduce using rule 48 (escrituraD -> hiper_exp empty .)


state 209

    (49) escrituraD -> LETRERO empty .

    R_PAR           reduce using rule 49 (escrituraD -> LETRERO empty .)


state 210

    (50) decision -> SI L_PAR hiper_exp R_PAR . ENTONCES bloque decisionU empty

    ENTONCES        shift and go to state 248


state 211

    (53) condicional -> MIENTRAS L_PAR hiper_exp R_PAR . HACER bloque empty

    HACER           shift and go to state 249


state 212

    (54) no_condicional -> DESDE L_PAR asignacion R_PAR . HASTA hiper_exp HACER bloque empty

    HASTA           shift and go to state 250


state 213

    (64) circulo -> CIRCULO L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 251

state 214

    (65) color -> COLOR L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 252

state 215

    (66) grosor -> GROSOR L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 253

state 216

    (67) linea -> LINEA L_PAR hiper_exp COMA . hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 254
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 217

    (68) puntoxy -> PUNTOXY L_PAR hiper_exp COMA . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 255
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 218

    (69) arco -> ARCO L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 256

state 219

    (70) penup -> PENUP L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 257

state 220

    (71) pendown -> PENDOWN L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 258

state 221

    (20) recibir_parametros -> ID DOSPUNTOS tipo_var recibir_parametrosD . empty
    (103) empty -> .

    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 259

state 222

    (23) recibir_parametrosD -> empty .

    R_PAR           reduce using rule 23 (recibir_parametrosD -> empty .)


state 223

    (22) recibir_parametrosD -> COMA . recibir_parametros empty
    (20) recibir_parametros -> . ID DOSPUNTOS tipo_var recibir_parametrosD empty
    (21) recibir_parametros -> . empty
    (103) empty -> .

    ID              shift and go to state 83
    R_PAR           reduce using rule 103 (empty -> .)

    recibir_parametros             shift and go to state 260
    empty                          shift and go to state 85

state 224

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque . funcionesD
    (11) funcionesD -> . funciones
    (12) funcionesD -> . empty
    (8) funciones -> . funcionesU
    (9) funciones -> . empty
    (103) empty -> .
    (10) funcionesU -> . tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD
    (13) tipo_funcion -> . ENTERO empty
    (14) tipo_funcion -> . FLOTANTE empty
    (15) tipo_funcion -> . CARACTER empty
    (16) tipo_funcion -> . VOID empty

    PRINCIPAL       reduce using rule 103 (empty -> .)
    ENTERO          shift and go to state 13
    FLOTANTE        shift and go to state 14
    CARACTER        shift and go to state 15
    VOID            shift and go to state 16

    tipo_funcion                   shift and go to state 12
    funcionesD                     shift and go to state 261
    funciones                      shift and go to state 262
    empty                          shift and go to state 263
    funcionesU                     shift and go to state 11

state 225

    (85) hiper_expU -> operadorL hiper_exp . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 264

state 226

    (76) operadorL -> OR empty .

    L_PAR           reduce using rule 76 (operadorL -> OR empty .)
    ID              reduce using rule 76 (operadorL -> OR empty .)
    ENTEROVAL       reduce using rule 76 (operadorL -> OR empty .)
    FLOTANTEVAL     reduce using rule 76 (operadorL -> OR empty .)
    CARACTERVAL     reduce using rule 76 (operadorL -> OR empty .)


state 227

    (77) operadorL -> AND empty .

    L_PAR           reduce using rule 77 (operadorL -> AND empty .)
    ID              reduce using rule 77 (operadorL -> AND empty .)
    ENTEROVAL       reduce using rule 77 (operadorL -> AND empty .)
    FLOTANTEVAL     reduce using rule 77 (operadorL -> AND empty .)
    CARACTERVAL     reduce using rule 77 (operadorL -> AND empty .)


state 228

    (88) super_expU -> operadorR exp . empty
    (103) empty -> .

    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 265

state 229

    (78) operadorR -> MENORQUE empty .

    L_PAR           reduce using rule 78 (operadorR -> MENORQUE empty .)
    ID              reduce using rule 78 (operadorR -> MENORQUE empty .)
    ENTEROVAL       reduce using rule 78 (operadorR -> MENORQUE empty .)
    FLOTANTEVAL     reduce using rule 78 (operadorR -> MENORQUE empty .)
    CARACTERVAL     reduce using rule 78 (operadorR -> MENORQUE empty .)


state 230

    (79) operadorR -> MAYORQUE empty .

    L_PAR           reduce using rule 79 (operadorR -> MAYORQUE empty .)
    ID              reduce using rule 79 (operadorR -> MAYORQUE empty .)
    ENTEROVAL       reduce using rule 79 (operadorR -> MAYORQUE empty .)
    FLOTANTEVAL     reduce using rule 79 (operadorR -> MAYORQUE empty .)
    CARACTERVAL     reduce using rule 79 (operadorR -> MAYORQUE empty .)


state 231

    (80) operadorR -> MENORIGUALQUE empty .

    L_PAR           reduce using rule 80 (operadorR -> MENORIGUALQUE empty .)
    ID              reduce using rule 80 (operadorR -> MENORIGUALQUE empty .)
    ENTEROVAL       reduce using rule 80 (operadorR -> MENORIGUALQUE empty .)
    FLOTANTEVAL     reduce using rule 80 (operadorR -> MENORIGUALQUE empty .)
    CARACTERVAL     reduce using rule 80 (operadorR -> MENORIGUALQUE empty .)


state 232

    (81) operadorR -> MAYORIGUALQUE empty .

    L_PAR           reduce using rule 81 (operadorR -> MAYORIGUALQUE empty .)
    ID              reduce using rule 81 (operadorR -> MAYORIGUALQUE empty .)
    ENTEROVAL       reduce using rule 81 (operadorR -> MAYORIGUALQUE empty .)
    FLOTANTEVAL     reduce using rule 81 (operadorR -> MAYORIGUALQUE empty .)
    CARACTERVAL     reduce using rule 81 (operadorR -> MAYORIGUALQUE empty .)


state 233

    (82) operadorR -> IGUALQUE empty .

    L_PAR           reduce using rule 82 (operadorR -> IGUALQUE empty .)
    ID              reduce using rule 82 (operadorR -> IGUALQUE empty .)
    ENTEROVAL       reduce using rule 82 (operadorR -> IGUALQUE empty .)
    FLOTANTEVAL     reduce using rule 82 (operadorR -> IGUALQUE empty .)
    CARACTERVAL     reduce using rule 82 (operadorR -> IGUALQUE empty .)


state 234

    (83) operadorR -> DIFQUE empty .

    L_PAR           reduce using rule 83 (operadorR -> DIFQUE empty .)
    ID              reduce using rule 83 (operadorR -> DIFQUE empty .)
    ENTEROVAL       reduce using rule 83 (operadorR -> DIFQUE empty .)
    FLOTANTEVAL     reduce using rule 83 (operadorR -> DIFQUE empty .)
    CARACTERVAL     reduce using rule 83 (operadorR -> DIFQUE empty .)


state 235

    (91) expU -> operadorA exp .

    MENORQUE        reduce using rule 91 (expU -> operadorA exp .)
    MAYORQUE        reduce using rule 91 (expU -> operadorA exp .)
    MENORIGUALQUE   reduce using rule 91 (expU -> operadorA exp .)
    MAYORIGUALQUE   reduce using rule 91 (expU -> operadorA exp .)
    IGUALQUE        reduce using rule 91 (expU -> operadorA exp .)
    DIFQUE          reduce using rule 91 (expU -> operadorA exp .)
    OR              reduce using rule 91 (expU -> operadorA exp .)
    AND             reduce using rule 91 (expU -> operadorA exp .)
    PUNTOYCOMA      reduce using rule 91 (expU -> operadorA exp .)
    R_PAR           reduce using rule 91 (expU -> operadorA exp .)
    COMA            reduce using rule 91 (expU -> operadorA exp .)
    HACER           reduce using rule 91 (expU -> operadorA exp .)


state 236

    (72) operadorA -> MAS empty .

    L_PAR           reduce using rule 72 (operadorA -> MAS empty .)
    ID              reduce using rule 72 (operadorA -> MAS empty .)
    ENTEROVAL       reduce using rule 72 (operadorA -> MAS empty .)
    FLOTANTEVAL     reduce using rule 72 (operadorA -> MAS empty .)
    CARACTERVAL     reduce using rule 72 (operadorA -> MAS empty .)


state 237

    (73) operadorA -> MENOS empty .

    L_PAR           reduce using rule 73 (operadorA -> MENOS empty .)
    ID              reduce using rule 73 (operadorA -> MENOS empty .)
    ENTEROVAL       reduce using rule 73 (operadorA -> MENOS empty .)
    FLOTANTEVAL     reduce using rule 73 (operadorA -> MENOS empty .)
    CARACTERVAL     reduce using rule 73 (operadorA -> MENOS empty .)


state 238

    (94) terminoU -> operadorT termino .

    MAS             reduce using rule 94 (terminoU -> operadorT termino .)
    MENOS           reduce using rule 94 (terminoU -> operadorT termino .)
    MENORQUE        reduce using rule 94 (terminoU -> operadorT termino .)
    MAYORQUE        reduce using rule 94 (terminoU -> operadorT termino .)
    MENORIGUALQUE   reduce using rule 94 (terminoU -> operadorT termino .)
    MAYORIGUALQUE   reduce using rule 94 (terminoU -> operadorT termino .)
    IGUALQUE        reduce using rule 94 (terminoU -> operadorT termino .)
    DIFQUE          reduce using rule 94 (terminoU -> operadorT termino .)
    OR              reduce using rule 94 (terminoU -> operadorT termino .)
    AND             reduce using rule 94 (terminoU -> operadorT termino .)
    PUNTOYCOMA      reduce using rule 94 (terminoU -> operadorT termino .)
    R_PAR           reduce using rule 94 (terminoU -> operadorT termino .)
    COMA            reduce using rule 94 (terminoU -> operadorT termino .)
    HACER           reduce using rule 94 (terminoU -> operadorT termino .)


state 239

    (74) operadorT -> MULT empty .

    L_PAR           reduce using rule 74 (operadorT -> MULT empty .)
    ID              reduce using rule 74 (operadorT -> MULT empty .)
    ENTEROVAL       reduce using rule 74 (operadorT -> MULT empty .)
    FLOTANTEVAL     reduce using rule 74 (operadorT -> MULT empty .)
    CARACTERVAL     reduce using rule 74 (operadorT -> MULT empty .)


state 240

    (75) operadorT -> DIV empty .

    L_PAR           reduce using rule 75 (operadorT -> DIV empty .)
    ID              reduce using rule 75 (operadorT -> DIV empty .)
    ENTEROVAL       reduce using rule 75 (operadorT -> DIV empty .)
    FLOTANTEVAL     reduce using rule 75 (operadorT -> DIV empty .)
    CARACTERVAL     reduce using rule 75 (operadorT -> DIV empty .)


state 241

    (98) factor -> L_PAR hiper_exp R_PAR . empty
    (103) empty -> .

    MULT            reduce using rule 103 (empty -> .)
    DIV             reduce using rule 103 (empty -> .)
    MAS             reduce using rule 103 (empty -> .)
    MENOS           reduce using rule 103 (empty -> .)
    MENORQUE        reduce using rule 103 (empty -> .)
    MAYORQUE        reduce using rule 103 (empty -> .)
    MENORIGUALQUE   reduce using rule 103 (empty -> .)
    MAYORIGUALQUE   reduce using rule 103 (empty -> .)
    IGUALQUE        reduce using rule 103 (empty -> .)
    DIFQUE          reduce using rule 103 (empty -> .)
    OR              reduce using rule 103 (empty -> .)
    AND             reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_PAR           reduce using rule 103 (empty -> .)
    COMA            reduce using rule 103 (empty -> .)
    HACER           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 266

state 242

    (24) mandar_parametros -> ID mandar_parametrosD empty .

    R_PAR           reduce using rule 24 (mandar_parametros -> ID mandar_parametrosD empty .)


state 243

    (26) mandar_parametrosD -> COMA mandar_parametros . empty
    (103) empty -> .

    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 267

state 244

    (44) llamada -> ID L_PAR mandar_parametros R_PAR empty .

    PUNTOYCOMA      reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MULT            reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    DIV             reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MAS             reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MENOS           reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MENORQUE        reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MAYORQUE        reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MENORIGUALQUE   reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    MAYORIGUALQUE   reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    IGUALQUE        reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    DIFQUE          reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    OR              reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    AND             reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    R_PAR           reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    COMA            reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)
    HACER           reduce using rule 44 (llamada -> ID L_PAR mandar_parametros R_PAR empty .)


state 245

    (45) retorno -> REGRESA L_PAR ID R_PAR empty .

    PUNTOYCOMA      reduce using rule 45 (retorno -> REGRESA L_PAR ID R_PAR empty .)


state 246

    (46) lectura -> LEER L_PAR ID R_PAR empty .

    PUNTOYCOMA      reduce using rule 46 (lectura -> LEER L_PAR ID R_PAR empty .)


state 247

    (47) escritura -> ESCRIBIR L_PAR escrituraD R_PAR empty .

    PUNTOYCOMA      reduce using rule 47 (escritura -> ESCRIBIR L_PAR escrituraD R_PAR empty .)


state 248

    (50) decision -> SI L_PAR hiper_exp R_PAR ENTONCES . bloque decisionU empty
    (28) bloque -> . L_LLAVE bloqueU R_LLAVE empty

    L_LLAVE         shift and go to state 44

    bloque                         shift and go to state 268

state 249

    (53) condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER . bloque empty
    (28) bloque -> . L_LLAVE bloqueU R_LLAVE empty

    L_LLAVE         shift and go to state 44

    bloque                         shift and go to state 269

state 250

    (54) no_condicional -> DESDE L_PAR asignacion R_PAR HASTA . hiper_exp HACER bloque empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 270
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 251

    (64) circulo -> CIRCULO L_PAR hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 64 (circulo -> CIRCULO L_PAR hiper_exp R_PAR empty .)


state 252

    (65) color -> COLOR L_PAR hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 65 (color -> COLOR L_PAR hiper_exp R_PAR empty .)


state 253

    (66) grosor -> GROSOR L_PAR hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 66 (grosor -> GROSOR L_PAR hiper_exp R_PAR empty .)


state 254

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp . COMA hiper_exp COMA hiper_exp R_PAR empty

    COMA            shift and go to state 271


state 255

    (68) puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp . R_PAR empty

    R_PAR           shift and go to state 272


state 256

    (69) arco -> ARCO L_PAR hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 69 (arco -> ARCO L_PAR hiper_exp R_PAR empty .)


state 257

    (70) penup -> PENUP L_PAR hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 70 (penup -> PENUP L_PAR hiper_exp R_PAR empty .)


state 258

    (71) pendown -> PENDOWN L_PAR hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 71 (pendown -> PENDOWN L_PAR hiper_exp R_PAR empty .)


state 259

    (20) recibir_parametros -> ID DOSPUNTOS tipo_var recibir_parametrosD empty .

    R_PAR           reduce using rule 20 (recibir_parametros -> ID DOSPUNTOS tipo_var recibir_parametrosD empty .)


state 260

    (22) recibir_parametrosD -> COMA recibir_parametros . empty
    (103) empty -> .

    R_PAR           reduce using rule 103 (empty -> .)

    empty                          shift and go to state 273

state 261

    (10) funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD .

    PRINCIPAL       reduce using rule 10 (funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD .)


state 262

    (11) funcionesD -> funciones .

    PRINCIPAL       reduce using rule 11 (funcionesD -> funciones .)


state 263

    (12) funcionesD -> empty .
    (9) funciones -> empty .

  ! reduce/reduce conflict for PRINCIPAL resolved using rule 9 (funciones -> empty .)
    PRINCIPAL       reduce using rule 9 (funciones -> empty .)

  ! PRINCIPAL       [ reduce using rule 12 (funcionesD -> empty .) ]


state 264

    (85) hiper_expU -> operadorL hiper_exp empty .

    PUNTOYCOMA      reduce using rule 85 (hiper_expU -> operadorL hiper_exp empty .)
    R_PAR           reduce using rule 85 (hiper_expU -> operadorL hiper_exp empty .)
    COMA            reduce using rule 85 (hiper_expU -> operadorL hiper_exp empty .)
    HACER           reduce using rule 85 (hiper_expU -> operadorL hiper_exp empty .)


state 265

    (88) super_expU -> operadorR exp empty .

    OR              reduce using rule 88 (super_expU -> operadorR exp empty .)
    AND             reduce using rule 88 (super_expU -> operadorR exp empty .)
    PUNTOYCOMA      reduce using rule 88 (super_expU -> operadorR exp empty .)
    R_PAR           reduce using rule 88 (super_expU -> operadorR exp empty .)
    COMA            reduce using rule 88 (super_expU -> operadorR exp empty .)
    HACER           reduce using rule 88 (super_expU -> operadorR exp empty .)


state 266

    (98) factor -> L_PAR hiper_exp R_PAR empty .

    MULT            reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    DIV             reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    MAS             reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    MENOS           reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    MENORQUE        reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    MAYORQUE        reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    MENORIGUALQUE   reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    MAYORIGUALQUE   reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    IGUALQUE        reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    DIFQUE          reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    OR              reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    AND             reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    PUNTOYCOMA      reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    R_PAR           reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    COMA            reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)
    HACER           reduce using rule 98 (factor -> L_PAR hiper_exp R_PAR empty .)


state 267

    (26) mandar_parametrosD -> COMA mandar_parametros empty .

    R_PAR           reduce using rule 26 (mandar_parametrosD -> COMA mandar_parametros empty .)


state 268

    (50) decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque . decisionU empty
    (51) decisionU -> . SINO bloque empty
    (52) decisionU -> . empty
    (103) empty -> .

    SINO            shift and go to state 276
    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    decisionU                      shift and go to state 274
    empty                          shift and go to state 275

state 269

    (53) condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 277

state 270

    (54) no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp . HACER bloque empty

    HACER           shift and go to state 278


state 271

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA . hiper_exp COMA hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 279
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 272

    (68) puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 280

state 273

    (22) recibir_parametrosD -> COMA recibir_parametros empty .

    R_PAR           reduce using rule 22 (recibir_parametrosD -> COMA recibir_parametros empty .)


state 274

    (50) decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 281

state 275

    (52) decisionU -> empty .

    ID              reduce using rule 52 (decisionU -> empty .)
    REGRESA         reduce using rule 52 (decisionU -> empty .)
    LEER            reduce using rule 52 (decisionU -> empty .)
    ESCRIBIR        reduce using rule 52 (decisionU -> empty .)
    SI              reduce using rule 52 (decisionU -> empty .)
    MIENTRAS        reduce using rule 52 (decisionU -> empty .)
    DESDE           reduce using rule 52 (decisionU -> empty .)
    CIRCULO         reduce using rule 52 (decisionU -> empty .)
    COLOR           reduce using rule 52 (decisionU -> empty .)
    GROSOR          reduce using rule 52 (decisionU -> empty .)
    LINEA           reduce using rule 52 (decisionU -> empty .)
    PUNTOXY         reduce using rule 52 (decisionU -> empty .)
    ARCO            reduce using rule 52 (decisionU -> empty .)
    PENUP           reduce using rule 52 (decisionU -> empty .)
    PENDOWN         reduce using rule 52 (decisionU -> empty .)
    PUNTOYCOMA      reduce using rule 52 (decisionU -> empty .)
    R_LLAVE         reduce using rule 52 (decisionU -> empty .)


state 276

    (51) decisionU -> SINO . bloque empty
    (28) bloque -> . L_LLAVE bloqueU R_LLAVE empty

    L_LLAVE         shift and go to state 44

    bloque                         shift and go to state 282

state 277

    (53) condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .

    ID              reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    REGRESA         reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    LEER            reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    ESCRIBIR        reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    SI              reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    MIENTRAS        reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    DESDE           reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    CIRCULO         reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    COLOR           reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    GROSOR          reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    LINEA           reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    PUNTOXY         reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    ARCO            reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    PENUP           reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    PENDOWN         reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    PUNTOYCOMA      reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)
    R_LLAVE         reduce using rule 53 (condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty .)


state 278

    (54) no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER . bloque empty
    (28) bloque -> . L_LLAVE bloqueU R_LLAVE empty

    L_LLAVE         shift and go to state 44

    bloque                         shift and go to state 283

state 279

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp . COMA hiper_exp R_PAR empty

    COMA            shift and go to state 284


state 280

    (68) puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 68 (puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty .)


state 281

    (50) decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .

    ID              reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    REGRESA         reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    LEER            reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    ESCRIBIR        reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    SI              reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    MIENTRAS        reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    DESDE           reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    CIRCULO         reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    COLOR           reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    GROSOR          reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    LINEA           reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    PUNTOXY         reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    ARCO            reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    PENUP           reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    PENDOWN         reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    PUNTOYCOMA      reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)
    R_LLAVE         reduce using rule 50 (decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty .)


state 282

    (51) decisionU -> SINO bloque . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 285

state 283

    (54) no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque . empty
    (103) empty -> .

    ID              reduce using rule 103 (empty -> .)
    REGRESA         reduce using rule 103 (empty -> .)
    LEER            reduce using rule 103 (empty -> .)
    ESCRIBIR        reduce using rule 103 (empty -> .)
    SI              reduce using rule 103 (empty -> .)
    MIENTRAS        reduce using rule 103 (empty -> .)
    DESDE           reduce using rule 103 (empty -> .)
    CIRCULO         reduce using rule 103 (empty -> .)
    COLOR           reduce using rule 103 (empty -> .)
    GROSOR          reduce using rule 103 (empty -> .)
    LINEA           reduce using rule 103 (empty -> .)
    PUNTOXY         reduce using rule 103 (empty -> .)
    ARCO            reduce using rule 103 (empty -> .)
    PENUP           reduce using rule 103 (empty -> .)
    PENDOWN         reduce using rule 103 (empty -> .)
    PUNTOYCOMA      reduce using rule 103 (empty -> .)
    R_LLAVE         reduce using rule 103 (empty -> .)

    empty                          shift and go to state 286

state 284

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA . hiper_exp R_PAR empty
    (84) hiper_exp -> . super_exp hiper_expU
    (87) super_exp -> . exp super_expU
    (90) exp -> . termino expU
    (93) termino -> . factor terminoU
    (96) factor -> . varcte empty
    (97) factor -> . llamada empty
    (98) factor -> . L_PAR hiper_exp R_PAR empty
    (99) varcte -> . ID empty
    (100) varcte -> . ENTEROVAL empty
    (101) varcte -> . FLOTANTEVAL empty
    (102) varcte -> . CARACTERVAL empty
    (44) llamada -> . ID L_PAR mandar_parametros R_PAR empty

    L_PAR           shift and go to state 143
    ID              shift and go to state 135
    ENTEROVAL       shift and go to state 144
    FLOTANTEVAL     shift and go to state 145
    CARACTERVAL     shift and go to state 146

    hiper_exp                      shift and go to state 287
    super_exp                      shift and go to state 137
    exp                            shift and go to state 138
    termino                        shift and go to state 139
    factor                         shift and go to state 140
    varcte                         shift and go to state 141
    llamada                        shift and go to state 142

state 285

    (51) decisionU -> SINO bloque empty .

    ID              reduce using rule 51 (decisionU -> SINO bloque empty .)
    REGRESA         reduce using rule 51 (decisionU -> SINO bloque empty .)
    LEER            reduce using rule 51 (decisionU -> SINO bloque empty .)
    ESCRIBIR        reduce using rule 51 (decisionU -> SINO bloque empty .)
    SI              reduce using rule 51 (decisionU -> SINO bloque empty .)
    MIENTRAS        reduce using rule 51 (decisionU -> SINO bloque empty .)
    DESDE           reduce using rule 51 (decisionU -> SINO bloque empty .)
    CIRCULO         reduce using rule 51 (decisionU -> SINO bloque empty .)
    COLOR           reduce using rule 51 (decisionU -> SINO bloque empty .)
    GROSOR          reduce using rule 51 (decisionU -> SINO bloque empty .)
    LINEA           reduce using rule 51 (decisionU -> SINO bloque empty .)
    PUNTOXY         reduce using rule 51 (decisionU -> SINO bloque empty .)
    ARCO            reduce using rule 51 (decisionU -> SINO bloque empty .)
    PENUP           reduce using rule 51 (decisionU -> SINO bloque empty .)
    PENDOWN         reduce using rule 51 (decisionU -> SINO bloque empty .)
    PUNTOYCOMA      reduce using rule 51 (decisionU -> SINO bloque empty .)
    R_LLAVE         reduce using rule 51 (decisionU -> SINO bloque empty .)


state 286

    (54) no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .

    ID              reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    REGRESA         reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    LEER            reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    ESCRIBIR        reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    SI              reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    MIENTRAS        reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    DESDE           reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    CIRCULO         reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    COLOR           reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    GROSOR          reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    LINEA           reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    PUNTOXY         reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    ARCO            reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    PENUP           reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    PENDOWN         reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    PUNTOYCOMA      reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)
    R_LLAVE         reduce using rule 54 (no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty .)


state 287

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp . R_PAR empty

    R_PAR           shift and go to state 288


state 288

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR . empty
    (103) empty -> .

    PUNTOYCOMA      reduce using rule 103 (empty -> .)

    empty                          shift and go to state 289

state 289

    (67) linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty .

    PUNTOYCOMA      reduce using rule 67 (linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 44 resolved as shift
WARNING: shift/reduce conflict for LEER in state 44 resolved as shift
WARNING: shift/reduce conflict for ESCRIBIR in state 44 resolved as shift
WARNING: shift/reduce conflict for SI in state 44 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 44 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 44 resolved as shift
WARNING: shift/reduce conflict for CIRCULO in state 44 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 44 resolved as shift
WARNING: shift/reduce conflict for GROSOR in state 44 resolved as shift
WARNING: shift/reduce conflict for LINEA in state 44 resolved as shift
WARNING: shift/reduce conflict for PUNTOXY in state 44 resolved as shift
WARNING: shift/reduce conflict for ARCO in state 44 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 44 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 50 resolved as shift
WARNING: shift/reduce conflict for LEER in state 50 resolved as shift
WARNING: shift/reduce conflict for ESCRIBIR in state 50 resolved as shift
WARNING: shift/reduce conflict for SI in state 50 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 50 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 50 resolved as shift
WARNING: shift/reduce conflict for CIRCULO in state 50 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 50 resolved as shift
WARNING: shift/reduce conflict for GROSOR in state 50 resolved as shift
WARNING: shift/reduce conflict for LINEA in state 50 resolved as shift
WARNING: shift/reduce conflict for PUNTOXY in state 50 resolved as shift
WARNING: shift/reduce conflict for ARCO in state 50 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 50 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 50 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (bloqueU -> empty)
WARNING: rejected rule (estatuto -> empty) in state 49
WARNING: reduce/reduce conflict in state 49 resolved using rule (estatuto -> empty)
WARNING: rejected rule (funciones_especiales -> empty) in state 49
WARNING: reduce/reduce conflict in state 89 resolved using rule (bloqueU -> empty)
WARNING: rejected rule (bloqueD -> empty) in state 89
WARNING: reduce/reduce conflict in state 89 resolved using rule (bloqueU -> empty)
WARNING: rejected rule (estatuto -> empty) in state 89
WARNING: reduce/reduce conflict in state 89 resolved using rule (estatuto -> empty)
WARNING: rejected rule (funciones_especiales -> empty) in state 89
WARNING: reduce/reduce conflict in state 263 resolved using rule (funciones -> empty)
WARNING: rejected rule (funcionesD -> empty) in state 263
WARNING: Rule (funciones_especiales -> empty) is never reduced
WARNING: Rule (bloqueD -> empty) is never reduced
WARNING: Rule (funcionesD -> empty) is never reduced
