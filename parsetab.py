
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARCO CARACTER CARACTERVAL CIRCULO COLOR COMA DESDE DIFQUE DIV DOSPUNTOS ENTERO ENTEROVAL ENTONCES ESCRIBIR FLOTANTE FLOTANTEVAL FUNCION GROSOR HACER HASTA ID IGUAL IGUALQUE LEER LETRERO LINEA L_CORCHETE L_LLAVE L_PAR MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MIENTRAS MULT OR PENDOWN PENUP PRINCIPAL PROGRAMA PUNTO PUNTOXY PUNTOYCOMA REGRESA R_CORCHETE R_LLAVE R_PAR SI SINO VARIABLES VOID\n    program : PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL neu_principal L_PAR R_PAR bloque empty\n    \n    variables : VARIABLES variablesU\n              | empty\n\n    variablesU : variablesD\n               | empty\n\n    variablesD : ID neu_addVariableAStack COMA variablesD\n               | ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU\n    \n    funciones : funcionesU\n              | empty\n    \n    funcionesU : tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD\n    \n    funcionesD : funciones\n               | empty\n    \n    tipo_funcion : ENTERO empty\n                 | FLOTANTE empty\n                 | CARACTER empty\n                 | VOID empty\n    \n    tipo_var : ENTERO empty\n             | FLOTANTE empty\n             | CARACTER empty\n    \n    recibir_parametros : ID DOSPUNTOS tipo_var recibir_parametrosD empty\n                       | empty\n\n    recibir_parametrosD : COMA recibir_parametros empty\n                       | empty\n    \n    mandar_parametros : ID mandar_parametrosD empty\n                      | empty\n\n    mandar_parametrosD : COMA mandar_parametros empty\n                       | empty\n    \n    bloque : L_LLAVE bloqueU R_LLAVE empty\n\n    bloqueU : estatuto bloqueD neu_vaciarPilas empty\n            | empty\n\n    bloqueD : bloqueU empty\n            | empty\n    \n    estatuto : asignacion PUNTOYCOMA empty\n             | llamada PUNTOYCOMA empty\n             | retorno PUNTOYCOMA empty\n             | lectura PUNTOYCOMA empty\n             | escritura PUNTOYCOMA empty\n             | decision empty\n             | condicional empty\n             | no_condicional empty\n             | funciones_especiales PUNTOYCOMA empty\n             | empty\n    \n    asignacion : ID neu_addID IGUAL neu_addOperador hiper_exp neu_asignacion empty\n    \n    llamada : ID neu_llamada_era L_PAR mandar_parametros R_PAR neu_llamada_gosub empty\n    \n    retorno : REGRESA L_PAR ID R_PAR empty\n    \n    lectura : LEER L_PAR ID neu_lectura R_PAR empty\n    \n    escritura : ESCRIBIR L_PAR escrituraD R_PAR empty\n\n    escrituraD : hiper_exp empty\n               | LETRERO empty\n    \n    decision : SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty\n\n    decisionU : SINO bloque empty\n              | empty\n    \n    condicional : MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty\n    \n    no_condicional : DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty\n    \n    funciones_especiales : circulo empty\n                         | color empty\n                         | grosor empty\n                         | linea empty\n                         | puntoxy empty\n                         | arco empty\n                         | penup empty\n                         | pendown empty\n                         | empty\n    \n    circulo : CIRCULO L_PAR hiper_exp R_PAR empty\n    \n    color : COLOR L_PAR hiper_exp R_PAR empty\n    \n    grosor : GROSOR L_PAR hiper_exp R_PAR empty\n    \n    linea : LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty\n    \n    puntoxy : PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty\n    \n    arco : ARCO L_PAR hiper_exp R_PAR empty\n    \n    penup : PENUP L_PAR hiper_exp R_PAR empty\n    \n    pendown : PENDOWN L_PAR hiper_exp R_PAR empty\n    \n    operadorA : MAS neu_addOperador empty\n              | MENOS neu_addOperador empty\n    \n    operadorT : MULT neu_addOperador empty\n              | DIV neu_addOperador empty\n    \n    operadorL : OR neu_addOperador empty\n              | AND neu_addOperador empty\n    \n    operadorR : MENORQUE neu_addOperador empty\n              | MAYORQUE neu_addOperador empty\n              | MENORIGUALQUE neu_addOperador empty\n              | MAYORIGUALQUE neu_addOperador empty\n              | IGUALQUE neu_addOperador empty\n              | DIFQUE neu_addOperador empty\n    \n    hiper_exp : super_exp neu_hacerHiperExp hiper_expU\n\n    hiper_expU : operadorL hiper_exp empty \n               | empty\n    \n    super_exp : exp neu_hacerSuperExp super_expU\n\n    super_expU : operadorR super_exp empty \n               | empty\n    \n    exp : termino neu_hacerExp expU\n\n    expU : operadorA exp\n         | empty\n    \n    termino : factor neu_hacerTermino terminoU\n\n    terminoU : operadorT termino \n             | empty\n    \n    factor : varcte empty\n           | llamada empty\n           | L_PAR hiper_exp R_PAR empty\n    \n    varcte  : ID neu_addID empty\n            | ENTEROVAL neu_addTermino neu_addTipoEntero empty\n            | FLOTANTEVAL neu_addTermino neu_addTipoFlotante empty\n            | CARACTERVAL neu_addTermino neu_addTipoCaracter empty\n    \n    empty : \n    neu_programa : neu_addFuncion : neu_principal : neu_addVariable : neu_addVariableAStack : neu_addID : neu_addTermino : neu_addTipoEntero : neu_addTipoFlotante : neu_addTipoCaracter : neu_llamada_era : neu_llamada_gosub : neu_addOperador : getGMemoria : getLMemoria : getCMemoria : neu_hacerTermino : neu_hacerExp : neu_hacerSuperExp : neu_hacerHiperExp : neu_asignacion : neu_lectura : neu_vaciarPilas : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,46,52,90,129,],[0,-103,-1,-103,-28,]),'ID':([2,8,22,31,44,45,47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,119,120,121,122,123,124,125,126,129,132,133,134,135,136,137,138,139,142,170,173,199,200,212,219,221,222,224,226,227,228,229,230,231,233,235,236,238,240,241,248,265,266,268,269,270,271,272,273,275,276,278,279,283,284,286,292,293,295,296,297,298,299,300,301,302,303,304,305,306,308,312,313,314,315,316,317,],[3,20,30,20,48,20,65,-42,65,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,140,141,152,152,152,159,152,152,152,152,152,152,152,152,-28,-33,-34,-35,-36,-37,-41,-116,174,152,48,152,152,152,174,152,-116,-116,152,-116,-116,-116,-116,-116,-116,152,-116,-116,152,-116,-116,152,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,152,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,-103,-52,-53,-50,-103,-103,152,-51,-54,]),'PUNTOYCOMA':([3,4,32,33,34,35,39,40,41,42,47,54,55,56,57,58,59,60,61,62,63,64,72,73,74,75,76,77,78,79,90,92,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,129,132,133,134,135,136,137,146,147,148,149,150,151,152,153,154,155,177,180,183,184,185,186,187,188,189,190,191,192,196,197,198,201,202,203,209,213,214,215,216,217,218,220,223,225,232,234,237,239,242,243,244,245,249,250,251,254,255,256,258,261,262,263,264,267,274,277,280,281,282,283,284,287,288,290,291,294,305,306,308,311,312,313,314,316,317,319,320,],[-104,5,-107,-103,-103,-103,45,-17,-18,-19,-103,-42,-103,94,95,96,97,98,-103,-103,-103,102,-103,-103,-103,-103,-103,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-55,-56,-57,-58,-59,-60,-61,-62,-28,-33,-34,-35,-36,-37,-41,-123,-122,-121,-120,-103,-103,-109,-110,-110,-110,-103,-103,-103,-103,-103,-103,-96,-97,-103,-111,-112,-113,-103,-103,-103,-103,-103,-103,-124,-115,-45,-103,-103,-47,-84,-86,-87,-89,-90,-92,-93,-95,-99,-103,-103,-103,-64,-65,-66,-69,-70,-71,-103,-103,-46,-98,-103,-103,-91,-94,-100,-101,-102,-103,-103,-103,-43,-44,-85,-88,-103,-52,-53,-68,-50,-103,-103,-51,-54,-103,-67,]),'VARIABLES':([5,89,],[8,8,]),'ENTERO':([5,6,7,8,17,18,19,28,38,45,51,88,90,129,171,],[-103,13,-3,-103,-2,-4,-5,33,-6,-103,-7,33,-103,-28,13,]),'FLOTANTE':([5,6,7,8,17,18,19,28,38,45,51,88,90,129,171,],[-103,14,-3,-103,-2,-4,-5,34,-6,-103,-7,34,-103,-28,14,]),'CARACTER':([5,6,7,8,17,18,19,28,38,45,51,88,90,129,171,],[-103,15,-3,-103,-2,-4,-5,35,-6,-103,-7,35,-103,-28,15,]),'VOID':([5,6,7,8,17,18,19,38,45,51,90,129,171,],[-103,16,-3,-103,-2,-4,-5,-6,-103,-7,-103,-28,16,]),'PRINCIPAL':([5,6,7,8,9,10,11,17,18,19,38,45,51,90,129,171,206,207,208,],[-103,-103,-3,-103,21,-9,-8,-2,-4,-5,-6,-103,-7,-103,-28,-103,-10,-11,-9,]),'L_LLAVE':([7,8,17,18,19,38,43,45,51,89,128,246,247,307,309,],[-3,-103,-2,-4,-5,-6,47,-103,-7,-103,47,47,47,47,47,]),'FUNCION':([12,13,14,15,16,23,24,25,26,],[22,-103,-103,-103,-103,-13,-14,-15,-16,]),'DOSPUNTOS':([20,48,],[28,88,]),'COMA':([20,27,33,34,35,40,41,42,127,146,147,148,149,150,151,152,153,154,155,163,164,174,183,184,185,186,187,188,189,190,191,192,213,216,218,220,223,225,232,234,237,239,242,243,244,245,252,261,263,264,267,274,277,280,281,282,290,291,294,310,],[-108,31,-103,-103,-103,-17,-18,-19,170,-123,-122,-121,-120,-103,-103,-109,-110,-110,-110,199,200,212,-103,-103,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-84,-86,-87,-89,-90,-92,-93,-95,-99,-103,-103,-103,286,-103,-98,-103,-103,-91,-94,-100,-101,-102,-44,-85,-88,315,]),'L_PAR':([21,29,30,37,65,66,67,68,69,70,71,80,81,82,83,84,85,86,87,104,107,108,109,119,120,121,122,123,124,125,126,138,142,152,173,199,200,219,221,222,224,226,227,228,229,230,231,233,235,236,238,240,241,248,265,266,268,269,270,271,272,273,275,276,278,279,286,292,293,295,296,297,298,299,300,301,302,303,304,315,],[-106,36,-105,44,-114,105,106,107,108,109,110,119,120,121,122,123,124,125,126,139,142,142,142,142,142,142,142,142,142,142,142,-116,142,-114,142,142,142,142,-116,-116,142,-116,-116,-116,-116,-116,-116,142,-116,-116,142,-116,-116,142,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,142,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,142,]),'R_PAR':([33,34,35,36,40,41,42,44,49,50,127,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,165,166,167,168,169,170,174,175,176,178,179,181,182,183,184,185,186,187,188,189,190,191,192,204,205,209,210,211,212,213,216,218,220,223,225,232,234,237,239,242,243,244,245,253,257,258,259,260,261,263,264,267,274,277,280,281,282,288,289,290,291,294,318,],[-103,-103,-103,43,-17,-18,-19,-103,89,-21,-103,-103,177,-125,180,-103,-103,-123,-122,-121,-120,-103,-103,-109,-110,-110,-110,193,194,195,196,197,198,201,202,203,-103,-23,-103,-103,213,-25,215,216,-48,-49,-103,-103,-103,-103,-96,-97,-103,-111,-112,-113,-20,-103,-124,-103,-27,-103,-115,-103,-84,-86,-87,-89,-90,-92,-93,-95,-99,-103,-103,-103,287,-22,-103,-24,-103,-103,-98,-103,-103,-91,-94,-100,-101,-102,-43,-26,-44,-85,-88,319,]),'R_LLAVE':([47,53,54,55,61,62,63,90,91,92,93,94,95,96,97,98,99,100,101,102,129,130,131,132,133,134,135,136,137,172,283,284,305,306,308,312,313,314,316,317,],[-103,90,-30,-103,-103,-103,-103,-103,-126,-30,-103,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-103,-31,-33,-34,-35,-36,-37,-41,-29,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'REGRESA':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[66,-42,66,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'LEER':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[67,-42,67,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'ESCRIBIR':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[68,-42,68,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'SI':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[69,-42,69,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'MIENTRAS':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[70,-42,70,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'DESDE':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[71,-42,71,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'CIRCULO':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[80,-42,80,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'COLOR':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[81,-42,81,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'GROSOR':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[82,-42,82,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'LINEA':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[83,-42,83,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'PUNTOXY':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[84,-42,84,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'ARCO':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[85,-42,85,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'PENUP':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[86,-42,86,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'PENDOWN':([47,54,55,61,62,63,90,92,94,95,96,97,98,99,100,101,102,129,132,133,134,135,136,137,283,284,305,306,308,312,313,314,316,317,],[87,-42,87,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'IGUAL':([65,103,159,],[-109,138,-109,]),'SINO':([90,129,283,],[-103,-28,307,]),'LETRERO':([107,],[145,]),'ENTEROVAL':([107,108,109,119,120,121,122,123,124,125,126,138,142,173,199,200,219,221,222,224,226,227,228,229,230,231,233,235,236,238,240,241,248,265,266,268,269,270,271,272,273,275,276,278,279,286,292,293,295,296,297,298,299,300,301,302,303,304,315,],[153,153,153,153,153,153,153,153,153,153,153,-116,153,153,153,153,153,-116,-116,153,-116,-116,-116,-116,-116,-116,153,-116,-116,153,-116,-116,153,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,153,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,153,]),'FLOTANTEVAL':([107,108,109,119,120,121,122,123,124,125,126,138,142,173,199,200,219,221,222,224,226,227,228,229,230,231,233,235,236,238,240,241,248,265,266,268,269,270,271,272,273,275,276,278,279,286,292,293,295,296,297,298,299,300,301,302,303,304,315,],[154,154,154,154,154,154,154,154,154,154,154,-116,154,154,154,154,154,-116,-116,154,-116,-116,-116,-116,-116,-116,154,-116,-116,154,-116,-116,154,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,154,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,154,]),'CARACTERVAL':([107,108,109,119,120,121,122,123,124,125,126,138,142,173,199,200,219,221,222,224,226,227,228,229,230,231,233,235,236,238,240,241,248,265,266,268,269,270,271,272,273,275,276,278,279,286,292,293,295,296,297,298,299,300,301,302,303,304,315,],[155,155,155,155,155,155,155,155,155,155,155,-116,155,155,155,155,155,-116,-116,155,-116,-116,-116,-116,-116,-116,155,-116,-116,155,-116,-116,155,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,155,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,155,]),'OR':([146,147,148,149,150,151,152,153,154,155,183,184,185,186,187,188,189,190,191,192,213,216,223,225,232,234,237,239,242,243,244,245,261,263,267,274,277,280,281,282,290,294,],[-123,-122,-121,-120,-103,-103,-109,-110,-110,-110,221,-103,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-87,-89,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-103,-91,-94,-100,-101,-102,-44,-88,]),'AND':([146,147,148,149,150,151,152,153,154,155,183,184,185,186,187,188,189,190,191,192,213,216,223,225,232,234,237,239,242,243,244,245,261,263,267,274,277,280,281,282,290,294,],[-123,-122,-121,-120,-103,-103,-109,-110,-110,-110,222,-103,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-87,-89,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-103,-91,-94,-100,-101,-102,-44,-88,]),'HACER':([146,147,148,149,150,151,152,153,154,155,183,184,185,186,187,188,189,190,191,192,194,213,216,218,220,223,225,232,234,237,239,242,243,244,245,261,263,264,267,274,277,280,281,282,285,290,291,294,],[-123,-122,-121,-120,-103,-103,-109,-110,-110,-110,-103,-103,-103,-103,-96,-97,-103,-111,-112,-113,247,-115,-103,-84,-86,-87,-89,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-103,-103,-91,-94,-100,-101,-102,309,-44,-85,-88,]),'MENORQUE':([147,148,149,150,151,152,153,154,155,184,185,186,187,188,189,190,191,192,213,216,232,234,237,239,242,243,244,245,261,263,274,277,280,281,282,290,],[-122,-121,-120,-103,-103,-109,-110,-110,-110,226,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-91,-94,-100,-101,-102,-44,]),'MAYORQUE':([147,148,149,150,151,152,153,154,155,184,185,186,187,188,189,190,191,192,213,216,232,234,237,239,242,243,244,245,261,263,274,277,280,281,282,290,],[-122,-121,-120,-103,-103,-109,-110,-110,-110,227,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-91,-94,-100,-101,-102,-44,]),'MENORIGUALQUE':([147,148,149,150,151,152,153,154,155,184,185,186,187,188,189,190,191,192,213,216,232,234,237,239,242,243,244,245,261,263,274,277,280,281,282,290,],[-122,-121,-120,-103,-103,-109,-110,-110,-110,228,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-91,-94,-100,-101,-102,-44,]),'MAYORIGUALQUE':([147,148,149,150,151,152,153,154,155,184,185,186,187,188,189,190,191,192,213,216,232,234,237,239,242,243,244,245,261,263,274,277,280,281,282,290,],[-122,-121,-120,-103,-103,-109,-110,-110,-110,229,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-91,-94,-100,-101,-102,-44,]),'IGUALQUE':([147,148,149,150,151,152,153,154,155,184,185,186,187,188,189,190,191,192,213,216,232,234,237,239,242,243,244,245,261,263,274,277,280,281,282,290,],[-122,-121,-120,-103,-103,-109,-110,-110,-110,230,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-91,-94,-100,-101,-102,-44,]),'DIFQUE':([147,148,149,150,151,152,153,154,155,184,185,186,187,188,189,190,191,192,213,216,232,234,237,239,242,243,244,245,261,263,274,277,280,281,282,290,],[-122,-121,-120,-103,-103,-109,-110,-110,-110,231,-103,-103,-96,-97,-103,-111,-112,-113,-115,-103,-90,-92,-93,-95,-99,-103,-103,-103,-103,-98,-91,-94,-100,-101,-102,-44,]),'MAS':([148,149,150,151,152,153,154,155,185,186,187,188,189,190,191,192,213,216,237,239,242,243,244,245,261,263,277,280,281,282,290,],[-121,-120,-103,-103,-109,-110,-110,-110,235,-103,-96,-97,-103,-111,-112,-113,-115,-103,-93,-95,-99,-103,-103,-103,-103,-98,-94,-100,-101,-102,-44,]),'MENOS':([148,149,150,151,152,153,154,155,185,186,187,188,189,190,191,192,213,216,237,239,242,243,244,245,261,263,277,280,281,282,290,],[-121,-120,-103,-103,-109,-110,-110,-110,236,-103,-96,-97,-103,-111,-112,-113,-115,-103,-93,-95,-99,-103,-103,-103,-103,-98,-94,-100,-101,-102,-44,]),'MULT':([149,150,151,152,153,154,155,186,187,188,189,190,191,192,213,216,242,243,244,245,261,263,280,281,282,290,],[-120,-103,-103,-109,-110,-110,-110,240,-96,-97,-103,-111,-112,-113,-115,-103,-99,-103,-103,-103,-103,-98,-100,-101,-102,-44,]),'DIV':([149,150,151,152,153,154,155,186,187,188,189,190,191,192,213,216,242,243,244,245,261,263,280,281,282,290,],[-120,-103,-103,-109,-110,-110,-110,241,-96,-97,-103,-111,-112,-113,-115,-103,-99,-103,-103,-103,-103,-98,-100,-101,-102,-44,]),'ENTONCES':([193,],[246,]),'HASTA':([195,],[248,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'neu_programa':([3,],[4,]),'variables':([5,89,],[6,128,]),'empty':([5,6,8,13,14,15,16,33,34,35,44,45,46,47,55,61,62,63,72,73,74,75,76,77,78,79,89,90,93,94,95,96,97,98,102,127,130,139,144,145,150,151,168,170,171,174,177,180,183,184,185,186,189,196,197,198,201,202,203,205,210,212,215,216,243,244,245,258,260,261,264,265,266,267,268,269,270,271,272,273,275,276,278,279,283,284,287,305,313,314,319,],[7,10,19,23,24,25,26,40,41,42,50,19,52,54,92,99,100,101,111,112,113,114,115,116,117,118,7,129,131,132,133,134,135,136,137,169,172,176,181,182,187,188,204,50,208,211,214,217,220,225,234,239,242,249,250,251,254,255,256,257,259,176,262,263,280,281,282,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,308,311,312,316,317,320,]),'funciones':([6,171,],[9,207,]),'funcionesU':([6,171,],[11,11,]),'tipo_funcion':([6,171,],[12,12,]),'variablesU':([8,45,],[17,51,]),'variablesD':([8,31,45,],[18,38,18,]),'neu_addVariableAStack':([20,],[27,]),'neu_principal':([21,],[29,]),'tipo_var':([28,88,],[32,127,]),'neu_addFuncion':([30,],[37,]),'neu_addVariable':([32,],[39,]),'bloque':([43,128,246,247,307,309,],[46,171,283,284,313,314,]),'recibir_parametros':([44,170,],[49,205,]),'bloqueU':([47,55,],[53,93,]),'estatuto':([47,55,],[55,55,]),'asignacion':([47,55,110,],[56,56,158,]),'llamada':([47,55,107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,224,233,238,248,286,315,],[57,57,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'retorno':([47,55,],[58,58,]),'lectura':([47,55,],[59,59,]),'escritura':([47,55,],[60,60,]),'decision':([47,55,],[61,61,]),'condicional':([47,55,],[62,62,]),'no_condicional':([47,55,],[63,63,]),'funciones_especiales':([47,55,],[64,64,]),'circulo':([47,55,],[72,72,]),'color':([47,55,],[73,73,]),'grosor':([47,55,],[74,74,]),'linea':([47,55,],[75,75,]),'puntoxy':([47,55,],[76,76,]),'arco':([47,55,],[77,77,]),'penup':([47,55,],[78,78,]),'pendown':([47,55,],[79,79,]),'bloqueD':([55,],[91,]),'neu_addID':([65,152,159,],[103,189,103,]),'neu_llamada_era':([65,152,],[104,104,]),'neu_vaciarPilas':([91,],[130,]),'escrituraD':([107,],[143,]),'hiper_exp':([107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,248,286,315,],[144,156,157,160,161,162,163,164,165,166,167,179,209,252,253,264,285,310,318,]),'super_exp':([107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,224,248,286,315,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,267,146,146,146,]),'exp':([107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,224,233,248,286,315,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,274,147,147,147,]),'termino':([107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,224,233,238,248,286,315,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,277,148,148,148,]),'factor':([107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,224,233,238,248,286,315,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'varcte':([107,108,109,119,120,121,122,123,124,125,126,142,173,199,200,219,224,233,238,248,286,315,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'recibir_parametrosD':([127,],[168,]),'neu_addOperador':([138,221,222,226,227,228,229,230,231,235,236,240,241,],[173,265,266,268,269,270,271,272,273,275,276,278,279,]),'mandar_parametros':([139,212,],[175,260,]),'neu_lectura':([141,],[178,]),'neu_hacerHiperExp':([146,],[183,]),'neu_hacerSuperExp':([147,],[184,]),'neu_hacerExp':([148,],[185,]),'neu_hacerTermino':([149,],[186,]),'neu_addTermino':([153,154,155,],[190,191,192,]),'funcionesD':([171,],[206,]),'mandar_parametrosD':([174,],[210,]),'hiper_expU':([183,],[218,]),'operadorL':([183,],[219,]),'super_expU':([184,],[223,]),'operadorR':([184,],[224,]),'expU':([185,],[232,]),'operadorA':([185,],[233,]),'terminoU':([186,],[237,]),'operadorT':([186,],[238,]),'neu_addTipoEntero':([190,],[243,]),'neu_addTipoFlotante':([191,],[244,]),'neu_addTipoCaracter':([192,],[245,]),'neu_asignacion':([209,],[258,]),'neu_llamada_gosub':([213,],[261,]),'decisionU':([283,],[305,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA ID neu_programa PUNTOYCOMA variables funciones PRINCIPAL neu_principal L_PAR R_PAR bloque empty','program',12,'p_programa','lexer_parser.py',255),
  ('variables -> VARIABLES variablesU','variables',2,'p_variales','lexer_parser.py',261),
  ('variables -> empty','variables',1,'p_variales','lexer_parser.py',262),
  ('variablesU -> variablesD','variablesU',1,'p_variales','lexer_parser.py',264),
  ('variablesU -> empty','variablesU',1,'p_variales','lexer_parser.py',265),
  ('variablesD -> ID neu_addVariableAStack COMA variablesD','variablesD',4,'p_variales','lexer_parser.py',267),
  ('variablesD -> ID DOSPUNTOS tipo_var neu_addVariable PUNTOYCOMA variablesU','variablesD',6,'p_variales','lexer_parser.py',268),
  ('funciones -> funcionesU','funciones',1,'p_funciones','lexer_parser.py',274),
  ('funciones -> empty','funciones',1,'p_funciones','lexer_parser.py',275),
  ('funcionesU -> tipo_funcion FUNCION ID neu_addFuncion L_PAR recibir_parametros R_PAR variables bloque funcionesD','funcionesU',10,'p_funciones','lexer_parser.py',277),
  ('funcionesD -> funciones','funcionesD',1,'p_funciones','lexer_parser.py',279),
  ('funcionesD -> empty','funcionesD',1,'p_funciones','lexer_parser.py',280),
  ('tipo_funcion -> ENTERO empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',286),
  ('tipo_funcion -> FLOTANTE empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',287),
  ('tipo_funcion -> CARACTER empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',288),
  ('tipo_funcion -> VOID empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',289),
  ('tipo_var -> ENTERO empty','tipo_var',2,'p_tipo_var','lexer_parser.py',295),
  ('tipo_var -> FLOTANTE empty','tipo_var',2,'p_tipo_var','lexer_parser.py',296),
  ('tipo_var -> CARACTER empty','tipo_var',2,'p_tipo_var','lexer_parser.py',297),
  ('recibir_parametros -> ID DOSPUNTOS tipo_var recibir_parametrosD empty','recibir_parametros',5,'p_recibir_parametros','lexer_parser.py',303),
  ('recibir_parametros -> empty','recibir_parametros',1,'p_recibir_parametros','lexer_parser.py',304),
  ('recibir_parametrosD -> COMA recibir_parametros empty','recibir_parametrosD',3,'p_recibir_parametros','lexer_parser.py',306),
  ('recibir_parametrosD -> empty','recibir_parametrosD',1,'p_recibir_parametros','lexer_parser.py',307),
  ('mandar_parametros -> ID mandar_parametrosD empty','mandar_parametros',3,'p_mandar_parametros','lexer_parser.py',312),
  ('mandar_parametros -> empty','mandar_parametros',1,'p_mandar_parametros','lexer_parser.py',313),
  ('mandar_parametrosD -> COMA mandar_parametros empty','mandar_parametrosD',3,'p_mandar_parametros','lexer_parser.py',315),
  ('mandar_parametrosD -> empty','mandar_parametrosD',1,'p_mandar_parametros','lexer_parser.py',316),
  ('bloque -> L_LLAVE bloqueU R_LLAVE empty','bloque',4,'p_bloque','lexer_parser.py',323),
  ('bloqueU -> estatuto bloqueD neu_vaciarPilas empty','bloqueU',4,'p_bloque','lexer_parser.py',325),
  ('bloqueU -> empty','bloqueU',1,'p_bloque','lexer_parser.py',326),
  ('bloqueD -> bloqueU empty','bloqueD',2,'p_bloque','lexer_parser.py',328),
  ('bloqueD -> empty','bloqueD',1,'p_bloque','lexer_parser.py',329),
  ('estatuto -> asignacion PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',335),
  ('estatuto -> llamada PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',336),
  ('estatuto -> retorno PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',337),
  ('estatuto -> lectura PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',338),
  ('estatuto -> escritura PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',339),
  ('estatuto -> decision empty','estatuto',2,'p_estatuto','lexer_parser.py',340),
  ('estatuto -> condicional empty','estatuto',2,'p_estatuto','lexer_parser.py',341),
  ('estatuto -> no_condicional empty','estatuto',2,'p_estatuto','lexer_parser.py',342),
  ('estatuto -> funciones_especiales PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',343),
  ('estatuto -> empty','estatuto',1,'p_estatuto','lexer_parser.py',344),
  ('asignacion -> ID neu_addID IGUAL neu_addOperador hiper_exp neu_asignacion empty','asignacion',7,'p_asignacion','lexer_parser.py',349),
  ('llamada -> ID neu_llamada_era L_PAR mandar_parametros R_PAR neu_llamada_gosub empty','llamada',7,'p_llamada','lexer_parser.py',355),
  ('retorno -> REGRESA L_PAR ID R_PAR empty','retorno',5,'p_retorno','lexer_parser.py',361),
  ('lectura -> LEER L_PAR ID neu_lectura R_PAR empty','lectura',6,'p_lectura','lexer_parser.py',366),
  ('escritura -> ESCRIBIR L_PAR escrituraD R_PAR empty','escritura',5,'p_escritura','lexer_parser.py',372),
  ('escrituraD -> hiper_exp empty','escrituraD',2,'p_escritura','lexer_parser.py',374),
  ('escrituraD -> LETRERO empty','escrituraD',2,'p_escritura','lexer_parser.py',375),
  ('decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty','decision',8,'p_decision','lexer_parser.py',381),
  ('decisionU -> SINO bloque empty','decisionU',3,'p_decision','lexer_parser.py',383),
  ('decisionU -> empty','decisionU',1,'p_decision','lexer_parser.py',384),
  ('condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty','condicional',7,'p_condicional','lexer_parser.py',389),
  ('no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty','no_condicional',9,'p_no_condicional','lexer_parser.py',394),
  ('funciones_especiales -> circulo empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',401),
  ('funciones_especiales -> color empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',402),
  ('funciones_especiales -> grosor empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',403),
  ('funciones_especiales -> linea empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',404),
  ('funciones_especiales -> puntoxy empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',405),
  ('funciones_especiales -> arco empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',406),
  ('funciones_especiales -> penup empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',407),
  ('funciones_especiales -> pendown empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',408),
  ('funciones_especiales -> empty','funciones_especiales',1,'p_funciones_especiales','lexer_parser.py',409),
  ('circulo -> CIRCULO L_PAR hiper_exp R_PAR empty','circulo',5,'p_circulo','lexer_parser.py',414),
  ('color -> COLOR L_PAR hiper_exp R_PAR empty','color',5,'p_color','lexer_parser.py',419),
  ('grosor -> GROSOR L_PAR hiper_exp R_PAR empty','grosor',5,'p_grosor','lexer_parser.py',424),
  ('linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty','linea',11,'p_linea','lexer_parser.py',429),
  ('puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty','puntoxy',7,'p_puntoxy','lexer_parser.py',434),
  ('arco -> ARCO L_PAR hiper_exp R_PAR empty','arco',5,'p_arco','lexer_parser.py',439),
  ('penup -> PENUP L_PAR hiper_exp R_PAR empty','penup',5,'p_penup','lexer_parser.py',444),
  ('pendown -> PENDOWN L_PAR hiper_exp R_PAR empty','pendown',5,'p_pendown','lexer_parser.py',449),
  ('operadorA -> MAS neu_addOperador empty','operadorA',3,'p_operadorA','lexer_parser.py',456),
  ('operadorA -> MENOS neu_addOperador empty','operadorA',3,'p_operadorA','lexer_parser.py',457),
  ('operadorT -> MULT neu_addOperador empty','operadorT',3,'p_operadorT','lexer_parser.py',463),
  ('operadorT -> DIV neu_addOperador empty','operadorT',3,'p_operadorT','lexer_parser.py',464),
  ('operadorL -> OR neu_addOperador empty','operadorL',3,'p_operadorL','lexer_parser.py',470),
  ('operadorL -> AND neu_addOperador empty','operadorL',3,'p_operadorL','lexer_parser.py',471),
  ('operadorR -> MENORQUE neu_addOperador empty','operadorR',3,'p_operadorR','lexer_parser.py',477),
  ('operadorR -> MAYORQUE neu_addOperador empty','operadorR',3,'p_operadorR','lexer_parser.py',478),
  ('operadorR -> MENORIGUALQUE neu_addOperador empty','operadorR',3,'p_operadorR','lexer_parser.py',479),
  ('operadorR -> MAYORIGUALQUE neu_addOperador empty','operadorR',3,'p_operadorR','lexer_parser.py',480),
  ('operadorR -> IGUALQUE neu_addOperador empty','operadorR',3,'p_operadorR','lexer_parser.py',481),
  ('operadorR -> DIFQUE neu_addOperador empty','operadorR',3,'p_operadorR','lexer_parser.py',482),
  ('hiper_exp -> super_exp neu_hacerHiperExp hiper_expU','hiper_exp',3,'p_hiper_exp','lexer_parser.py',490),
  ('hiper_expU -> operadorL hiper_exp empty','hiper_expU',3,'p_hiper_exp','lexer_parser.py',492),
  ('hiper_expU -> empty','hiper_expU',1,'p_hiper_exp','lexer_parser.py',493),
  ('super_exp -> exp neu_hacerSuperExp super_expU','super_exp',3,'p_super_exp','lexer_parser.py',498),
  ('super_expU -> operadorR super_exp empty','super_expU',3,'p_super_exp','lexer_parser.py',500),
  ('super_expU -> empty','super_expU',1,'p_super_exp','lexer_parser.py',501),
  ('exp -> termino neu_hacerExp expU','exp',3,'p_exp','lexer_parser.py',506),
  ('expU -> operadorA exp','expU',2,'p_exp','lexer_parser.py',508),
  ('expU -> empty','expU',1,'p_exp','lexer_parser.py',509),
  ('termino -> factor neu_hacerTermino terminoU','termino',3,'p_termino','lexer_parser.py',514),
  ('terminoU -> operadorT termino','terminoU',2,'p_termino','lexer_parser.py',516),
  ('terminoU -> empty','terminoU',1,'p_termino','lexer_parser.py',517),
  ('factor -> varcte empty','factor',2,'p_factor','lexer_parser.py',522),
  ('factor -> llamada empty','factor',2,'p_factor','lexer_parser.py',523),
  ('factor -> L_PAR hiper_exp R_PAR empty','factor',4,'p_factor','lexer_parser.py',524),
  ('varcte -> ID neu_addID empty','varcte',3,'p_varcte','lexer_parser.py',529),
  ('varcte -> ENTEROVAL neu_addTermino neu_addTipoEntero empty','varcte',4,'p_varcte','lexer_parser.py',530),
  ('varcte -> FLOTANTEVAL neu_addTermino neu_addTipoFlotante empty','varcte',4,'p_varcte','lexer_parser.py',531),
  ('varcte -> CARACTERVAL neu_addTermino neu_addTipoCaracter empty','varcte',4,'p_varcte','lexer_parser.py',532),
  ('empty -> <empty>','empty',0,'p_empty','lexer_parser.py',541),
  ('neu_programa -> <empty>','neu_programa',0,'p_neu_programa','lexer_parser.py',550),
  ('neu_addFuncion -> <empty>','neu_addFuncion',0,'p_neu_addFuncion','lexer_parser.py',560),
  ('neu_principal -> <empty>','neu_principal',0,'p_neu_principal','lexer_parser.py',580),
  ('neu_addVariable -> <empty>','neu_addVariable',0,'p_neu_addVariable','lexer_parser.py',588),
  ('neu_addVariableAStack -> <empty>','neu_addVariableAStack',0,'p_neu_addVariableAStack','lexer_parser.py',610),
  ('neu_addID -> <empty>','neu_addID',0,'p_neu_addID','lexer_parser.py',617),
  ('neu_addTermino -> <empty>','neu_addTermino',0,'p_neu_addTermino','lexer_parser.py',629),
  ('neu_addTipoEntero -> <empty>','neu_addTipoEntero',0,'p_neu_addTipoEntero','lexer_parser.py',634),
  ('neu_addTipoFlotante -> <empty>','neu_addTipoFlotante',0,'p_neu_addTipoFlotante','lexer_parser.py',638),
  ('neu_addTipoCaracter -> <empty>','neu_addTipoCaracter',0,'p_neu_addTipoCaracter','lexer_parser.py',642),
  ('neu_llamada_era -> <empty>','neu_llamada_era',0,'p_neu_llamada_era','lexer_parser.py',650),
  ('neu_llamada_gosub -> <empty>','neu_llamada_gosub',0,'p_neu_llamada_gosub','lexer_parser.py',658),
  ('neu_addOperador -> <empty>','neu_addOperador',0,'p_neu_addOperador','lexer_parser.py',663),
  ('getGMemoria -> <empty>','getGMemoria',0,'p_getGMemoria','lexer_parser.py',676),
  ('getLMemoria -> <empty>','getLMemoria',0,'p_getLMemoria','lexer_parser.py',699),
  ('getCMemoria -> <empty>','getCMemoria',0,'p_getCMemoria','lexer_parser.py',722),
  ('neu_hacerTermino -> <empty>','neu_hacerTermino',0,'p_neu_hacerTermino','lexer_parser.py',748),
  ('neu_hacerExp -> <empty>','neu_hacerExp',0,'p_neu_hacerExp','lexer_parser.py',773),
  ('neu_hacerSuperExp -> <empty>','neu_hacerSuperExp',0,'p_neu_hacerSuperExp','lexer_parser.py',797),
  ('neu_hacerHiperExp -> <empty>','neu_hacerHiperExp',0,'p_neu_hacerHiperExp','lexer_parser.py',821),
  ('neu_asignacion -> <empty>','neu_asignacion',0,'p_neu_asignacion','lexer_parser.py',844),
  ('neu_lectura -> <empty>','neu_lectura',0,'p_neu_lectura','lexer_parser.py',851),
  ('neu_vaciarPilas -> <empty>','neu_vaciarPilas',0,'p_neu_vaciarPilas','lexer_parser.py',868),
]
