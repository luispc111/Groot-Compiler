
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARCO CARACTER CARACTERVAL CIRCULO COLOR COMA DESDE DIFQUE DIV DOSPUNTOS ENTERO ENTEROVAL ENTONCES ESCRIBIR FLOTANTE FLOTANTEVAL FUNCION GROSOR HACER HASTA ID IGUAL IGUALQUE LEER LETRERO LINEA L_CORCHETE L_LLAVE L_PAR MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MIENTRAS MULT OR PENDOWN PENUP PRINCIPAL PROGRAMA PUNTO PUNTOXY PUNTOYCOMA REGRESA R_CORCHETE R_LLAVE R_PAR SI SINO VARIABLES VOID\n    program : PROGRAMA ID PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty\n    \n    variables : VARIABLES variablesU\n              | empty\n\n    variablesU : variablesD\n               | empty\n    \n    variablesD : ID COMA variablesD\n               | ID DOSPUNTOS tipo_var PUNTOYCOMA variablesU\n    \n    funciones : funcionesU\n              | empty\n    \n    funcionesU : tipo_funcion FUNCION ID L_PAR recibir_parametros R_PAR variables bloque funcionesD\n    \n    funcionesD : funciones\n               | empty\n    \n    tipo_funcion : ENTERO empty\n                 | FLOTANTE empty\n                 | CARACTER empty\n                 | VOID empty\n    \n    tipo_var : ENTERO empty\n             | FLOTANTE empty\n             | CARACTER empty\n    \n    recibir_parametros : ID DOSPUNTOS tipo_var recibir_parametrosD empty\n                       | empty\n\n    recibir_parametrosD : COMA recibir_parametros empty\n                       | empty\n    \n    mandar_parametros : ID mandar_parametrosD empty\n                      | empty\n\n    mandar_parametrosD : COMA mandar_parametros empty\n                       | empty\n    \n    bloque : L_LLAVE bloqueU R_LLAVE empty\n\n    bloqueU : estatuto bloqueD empty\n            | empty\n\n    bloqueD : bloqueU empty\n            | empty\n    \n    estatuto : asignacion PUNTOYCOMA empty\n             | llamada PUNTOYCOMA empty\n             | retorno PUNTOYCOMA empty\n             | lectura PUNTOYCOMA empty\n             | escritura PUNTOYCOMA empty\n             | decision empty\n             | condicional empty\n             | no_condicional empty\n             | funciones_especiales PUNTOYCOMA empty\n             | empty\n    \n    asignacion : ID IGUAL hiper_exp empty\n    \n    llamada : ID L_PAR mandar_parametros R_PAR empty\n    \n    retorno : REGRESA L_PAR ID R_PAR empty\n    \n    lectura : LEER L_PAR ID R_PAR empty\n    \n    escritura : ESCRIBIR L_PAR escrituraD R_PAR empty\n\n    escrituraD : hiper_exp empty\n               | LETRERO empty\n    \n    decision : SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty\n\n    decisionU : SINO bloque empty\n              | empty\n    \n    condicional : MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty\n    \n    no_condicional : DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty\n    \n    funciones_especiales : circulo empty\n                         | color empty\n                         | grosor empty\n                         | linea empty\n                         | puntoxy empty\n                         | arco empty\n                         | penup empty\n                         | pendown empty\n                         | empty\n    \n    circulo : CIRCULO L_PAR hiper_exp R_PAR empty\n    \n    color : COLOR L_PAR hiper_exp R_PAR empty\n    \n    grosor : GROSOR L_PAR hiper_exp R_PAR empty\n    \n    linea : LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty\n    \n    puntoxy : PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty\n    \n    arco : ARCO L_PAR hiper_exp R_PAR empty\n    \n    penup : PENUP L_PAR hiper_exp R_PAR empty\n    \n    pendown : PENDOWN L_PAR hiper_exp R_PAR empty\n    \n    operadorA : MAS empty\n              | MENOS empty\n    \n    operadorT : MULT empty\n              | DIV empty\n    \n    operadorL : OR empty\n              | AND empty\n    \n    operadorR : MENORQUE empty\n              | MAYORQUE empty\n              | MENORIGUALQUE empty\n              | MAYORIGUALQUE empty\n              | IGUALQUE empty\n              | DIFQUE empty\n    \n    hiper_exp : super_exp hiper_expU\n\n    hiper_expU : operadorL hiper_exp empty \n               | empty\n    \n    super_exp : exp super_expU\n\n    super_expU : operadorR exp empty \n               | empty\n    \n    exp : termino expU\n\n    expU : operadorA exp\n         | empty\n    \n    termino : factor terminoU\n\n    terminoU : operadorT termino\n             | empty\n    \n    factor : varcte empty\n           | llamada empty\n           | L_PAR hiper_exp R_PAR empty\n    \n    varcte  : ID empty\n            | ENTEROVAL empty\n            | FLOTANTEVAL empty\n            | CARACTERVAL empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,41,47,85,124,],[0,-103,-1,-103,-28,]),'ID':([2,7,21,26,36,37,42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,116,117,118,119,120,121,124,127,128,129,130,131,132,141,167,172,174,175,177,179,180,181,182,183,184,186,188,189,191,193,194,203,216,217,227,228,230,231,232,233,234,235,237,238,240,241,251,265,266,268,270,271,273,277,278,279,280,281,282,],[3,19,29,19,43,19,60,-42,60,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,133,145,148,149,133,133,133,156,133,133,133,133,133,133,133,133,-28,-33,-34,-35,-36,-37,-41,133,43,133,-103,-103,133,-103,-103,-103,-103,-103,-103,133,-103,-103,133,-103,-103,145,133,133,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,133,-103,-103,133,-103,-52,-53,-50,-103,-103,133,-51,-54,]),'PUNTOYCOMA':([3,31,32,33,34,38,39,40,42,49,50,51,52,53,54,55,56,57,58,59,67,68,69,70,71,72,73,74,85,87,89,90,91,92,93,94,95,96,97,106,107,108,109,110,111,112,113,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,169,170,171,173,176,178,185,187,190,192,195,196,198,199,200,204,205,206,207,213,214,215,218,219,220,226,229,236,239,242,245,246,247,248,252,253,254,257,258,259,261,262,263,265,266,269,270,271,273,276,277,278,279,281,282,284,285,],[4,37,-103,-103,-103,-17,-18,-19,-103,-42,-103,89,90,91,92,93,-103,-103,-103,97,-103,-103,-103,-103,-103,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-55,-56,-57,-58,-59,-60,-61,-62,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-99,-43,-84,-86,-87,-89,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-91,-94,-103,-44,-45,-46,-47,-64,-65,-66,-69,-70,-71,-85,-88,-98,-103,-103,-103,-103,-52,-53,-68,-50,-103,-103,-51,-54,-103,-67,]),'VARIABLES':([4,84,],[7,7,]),'ENTERO':([4,5,6,7,16,17,18,27,30,37,46,83,85,124,168,],[-103,12,-3,-103,-2,-4,-5,32,-6,-103,-7,32,-103,-28,12,]),'FLOTANTE':([4,5,6,7,16,17,18,27,30,37,46,83,85,124,168,],[-103,13,-3,-103,-2,-4,-5,33,-6,-103,-7,33,-103,-28,13,]),'CARACTER':([4,5,6,7,16,17,18,27,30,37,46,83,85,124,168,],[-103,14,-3,-103,-2,-4,-5,34,-6,-103,-7,34,-103,-28,14,]),'VOID':([4,5,6,7,16,17,18,30,37,46,85,124,168,],[-103,15,-3,-103,-2,-4,-5,-6,-103,-7,-103,-28,15,]),'PRINCIPAL':([4,5,6,7,8,9,10,16,17,18,30,37,46,85,124,168,223,224,225,],[-103,-103,-3,-103,20,-9,-8,-2,-4,-5,-6,-103,-7,-103,-28,-103,-10,-11,-9,]),'L_LLAVE':([6,7,16,17,18,30,35,37,46,84,123,249,250,272,274,],[-3,-103,-2,-4,-5,-6,42,-103,-7,-103,42,42,42,42,42,]),'FUNCION':([11,12,13,14,15,22,23,24,25,],[21,-103,-103,-103,-103,-13,-14,-15,-16,]),'COMA':([19,32,33,34,38,39,40,122,133,135,136,137,138,139,140,142,143,144,145,160,161,169,171,173,176,178,185,187,190,192,195,196,198,199,200,204,226,229,236,239,242,245,255,261,262,263,275,],[26,-103,-103,-103,-17,-18,-19,167,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,203,216,217,-99,-84,-86,-87,-89,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-103,-103,-91,-94,-103,-44,268,-85,-88,-98,280,]),'DOSPUNTOS':([19,43,],[27,83,]),'L_PAR':([20,29,60,61,62,63,64,65,66,75,76,77,78,79,80,81,82,98,102,103,104,114,115,116,117,118,119,120,121,133,141,172,174,175,177,179,180,181,182,183,184,186,188,189,191,193,194,216,217,227,228,230,231,232,233,234,235,237,238,240,241,251,268,280,],[28,36,99,100,101,102,103,104,105,114,115,116,117,118,119,120,121,141,141,141,141,141,141,141,141,141,141,141,141,99,141,141,-103,-103,141,-103,-103,-103,-103,-103,-103,141,-103,-103,141,-103,-103,141,141,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,141,141,141,]),'R_PAR':([28,32,33,34,36,38,39,40,44,45,99,122,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,162,163,164,165,166,167,169,170,171,173,176,178,185,187,190,192,195,196,197,198,199,200,201,202,203,204,208,209,221,222,226,229,236,239,242,243,244,245,256,260,261,262,263,264,283,],[35,-103,-103,-103,-103,-17,-18,-19,84,-21,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,204,-25,205,206,207,-103,-103,210,211,212,213,214,215,218,219,220,-103,-23,-103,-99,-43,-84,-86,-87,-89,-90,-92,-93,-95,-96,-97,242,-100,-101,-102,-103,-27,-103,-103,-48,-49,-20,-103,-103,-103,-91,-94,-103,-24,-103,-44,269,-22,-85,-88,-98,-26,284,]),'R_LLAVE':([42,48,49,50,56,57,58,85,86,87,88,89,90,91,92,93,94,95,96,97,124,125,126,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[-103,85,-30,-103,-103,-103,-103,-103,-103,-30,-103,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-29,-31,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'REGRESA':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[61,-42,61,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'LEER':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[62,-42,62,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'ESCRIBIR':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[63,-42,63,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'SI':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[64,-42,64,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'MIENTRAS':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[65,-42,65,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'DESDE':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[66,-42,66,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'CIRCULO':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[75,-42,75,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'COLOR':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[76,-42,76,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'GROSOR':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[77,-42,77,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'LINEA':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[78,-42,78,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'PUNTOXY':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[79,-42,79,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'ARCO':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[80,-42,80,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'PENUP':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[81,-42,81,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'PENDOWN':([42,49,50,56,57,58,85,87,89,90,91,92,93,94,95,96,97,124,127,128,129,130,131,132,265,266,270,271,273,277,278,279,281,282,],[82,-42,82,-103,-103,-103,-103,-42,-103,-103,-103,-103,-103,-38,-39,-40,-103,-28,-33,-34,-35,-36,-37,-41,-103,-103,-103,-52,-53,-50,-103,-103,-51,-54,]),'IGUAL':([60,156,],[98,98,]),'SINO':([85,124,265,],[-103,-28,272,]),'ENTEROVAL':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,174,175,177,179,180,181,182,183,184,186,188,189,191,193,194,216,217,227,228,230,231,232,233,234,235,237,238,240,241,251,268,280,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,-103,-103,142,-103,-103,-103,-103,-103,-103,142,-103,-103,142,-103,-103,142,142,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,142,142,142,]),'FLOTANTEVAL':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,174,175,177,179,180,181,182,183,184,186,188,189,191,193,194,216,217,227,228,230,231,232,233,234,235,237,238,240,241,251,268,280,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,-103,-103,143,-103,-103,-103,-103,-103,-103,143,-103,-103,143,-103,-103,143,143,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,143,143,143,]),'CARACTERVAL':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,174,175,177,179,180,181,182,183,184,186,188,189,191,193,194,216,217,227,228,230,231,232,233,234,235,237,238,240,241,251,268,280,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,-103,-103,144,-103,-103,-103,-103,-103,-103,144,-103,-103,144,-103,-103,144,144,-76,-77,-78,-79,-80,-81,-82,-83,-72,-73,-74,-75,144,144,144,]),'LETRERO':([102,],[152,]),'MULT':([133,138,139,140,142,143,144,169,195,196,198,199,200,204,242,245,263,],[-103,193,-103,-103,-103,-103,-103,-99,-96,-97,-100,-101,-102,-103,-103,-44,-98,]),'DIV':([133,138,139,140,142,143,144,169,195,196,198,199,200,204,242,245,263,],[-103,194,-103,-103,-103,-103,-103,-99,-96,-97,-100,-101,-102,-103,-103,-44,-98,]),'MAS':([133,137,138,139,140,142,143,144,169,190,192,195,196,198,199,200,204,239,242,245,263,],[-103,188,-103,-103,-103,-103,-103,-103,-99,-93,-95,-96,-97,-100,-101,-102,-103,-94,-103,-44,-98,]),'MENOS':([133,137,138,139,140,142,143,144,169,190,192,195,196,198,199,200,204,239,242,245,263,],[-103,189,-103,-103,-103,-103,-103,-103,-99,-93,-95,-96,-97,-100,-101,-102,-103,-94,-103,-44,-98,]),'MENORQUE':([133,136,137,138,139,140,142,143,144,169,185,187,190,192,195,196,198,199,200,204,236,239,242,245,263,],[-103,179,-103,-103,-103,-103,-103,-103,-103,-99,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-91,-94,-103,-44,-98,]),'MAYORQUE':([133,136,137,138,139,140,142,143,144,169,185,187,190,192,195,196,198,199,200,204,236,239,242,245,263,],[-103,180,-103,-103,-103,-103,-103,-103,-103,-99,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-91,-94,-103,-44,-98,]),'MENORIGUALQUE':([133,136,137,138,139,140,142,143,144,169,185,187,190,192,195,196,198,199,200,204,236,239,242,245,263,],[-103,181,-103,-103,-103,-103,-103,-103,-103,-99,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-91,-94,-103,-44,-98,]),'MAYORIGUALQUE':([133,136,137,138,139,140,142,143,144,169,185,187,190,192,195,196,198,199,200,204,236,239,242,245,263,],[-103,182,-103,-103,-103,-103,-103,-103,-103,-99,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-91,-94,-103,-44,-98,]),'IGUALQUE':([133,136,137,138,139,140,142,143,144,169,185,187,190,192,195,196,198,199,200,204,236,239,242,245,263,],[-103,183,-103,-103,-103,-103,-103,-103,-103,-99,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-91,-94,-103,-44,-98,]),'DIFQUE':([133,136,137,138,139,140,142,143,144,169,185,187,190,192,195,196,198,199,200,204,236,239,242,245,263,],[-103,184,-103,-103,-103,-103,-103,-103,-103,-99,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-91,-94,-103,-44,-98,]),'OR':([133,135,136,137,138,139,140,142,143,144,169,176,178,185,187,190,192,195,196,198,199,200,204,229,236,239,242,245,262,263,],[-103,174,-103,-103,-103,-103,-103,-103,-103,-103,-99,-87,-89,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-103,-91,-94,-103,-44,-88,-98,]),'AND':([133,135,136,137,138,139,140,142,143,144,169,176,178,185,187,190,192,195,196,198,199,200,204,229,236,239,242,245,262,263,],[-103,175,-103,-103,-103,-103,-103,-103,-103,-103,-99,-87,-89,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,-103,-91,-94,-103,-44,-88,-98,]),'HACER':([133,135,136,137,138,139,140,142,143,144,169,171,173,176,178,185,187,190,192,195,196,198,199,200,204,211,226,229,236,239,242,245,261,262,263,267,],[-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-99,-84,-86,-87,-89,-90,-92,-93,-95,-96,-97,-100,-101,-102,-103,250,-103,-103,-91,-94,-103,-44,-85,-88,-98,274,]),'ENTONCES':([210,],[249,]),'HASTA':([212,],[251,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'variables':([4,84,],[5,123,]),'empty':([4,5,7,12,13,14,15,32,33,34,36,37,41,42,50,56,57,58,67,68,69,70,71,72,73,74,84,85,86,88,89,90,91,92,93,97,99,122,133,134,135,136,137,138,139,140,142,143,144,145,151,152,165,167,168,174,175,179,180,181,182,183,184,188,189,193,194,201,203,204,205,206,207,213,214,215,218,219,220,222,226,229,242,244,265,266,269,270,278,279,284,],[6,9,18,22,23,24,25,38,39,40,45,18,47,49,87,94,95,96,106,107,108,109,110,111,112,113,6,124,125,126,127,128,129,130,131,132,147,166,169,170,173,178,187,192,195,196,198,199,200,202,208,209,221,45,225,227,228,230,231,232,233,234,235,237,238,240,241,243,147,245,246,247,248,252,253,254,257,258,259,260,261,262,263,264,271,273,276,277,281,282,285,]),'funciones':([5,168,],[8,224,]),'funcionesU':([5,168,],[10,10,]),'tipo_funcion':([5,168,],[11,11,]),'variablesU':([7,37,],[16,46,]),'variablesD':([7,26,37,],[17,30,17,]),'tipo_var':([27,83,],[31,122,]),'bloque':([35,123,249,250,272,274,],[41,168,265,266,278,279,]),'recibir_parametros':([36,167,],[44,222,]),'bloqueU':([42,50,],[48,88,]),'estatuto':([42,50,],[50,50,]),'asignacion':([42,50,105,],[51,51,155,]),'llamada':([42,50,98,102,103,104,114,115,116,117,118,119,120,121,141,172,177,186,191,216,217,251,268,280,],[52,52,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'retorno':([42,50,],[53,53,]),'lectura':([42,50,],[54,54,]),'escritura':([42,50,],[55,55,]),'decision':([42,50,],[56,56,]),'condicional':([42,50,],[57,57,]),'no_condicional':([42,50,],[58,58,]),'funciones_especiales':([42,50,],[59,59,]),'circulo':([42,50,],[67,67,]),'color':([42,50,],[68,68,]),'grosor':([42,50,],[69,69,]),'linea':([42,50,],[70,70,]),'puntoxy':([42,50,],[71,71,]),'arco':([42,50,],[72,72,]),'penup':([42,50,],[73,73,]),'pendown':([42,50,],[74,74,]),'bloqueD':([50,],[86,]),'hiper_exp':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,216,217,251,268,280,],[134,151,153,154,157,158,159,160,161,162,163,164,197,226,255,256,267,275,283,]),'super_exp':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,216,217,251,268,280,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'exp':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,177,186,216,217,251,268,280,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,229,236,136,136,136,136,136,]),'termino':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,177,186,191,216,217,251,268,280,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,239,137,137,137,137,137,]),'factor':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,177,186,191,216,217,251,268,280,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'varcte':([98,102,103,104,114,115,116,117,118,119,120,121,141,172,177,186,191,216,217,251,268,280,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'mandar_parametros':([99,203,],[146,244,]),'escrituraD':([102,],[150,]),'recibir_parametrosD':([122,],[165,]),'hiper_expU':([135,],[171,]),'operadorL':([135,],[172,]),'super_expU':([136,],[176,]),'operadorR':([136,],[177,]),'expU':([137,],[185,]),'operadorA':([137,],[186,]),'terminoU':([138,],[190,]),'operadorT':([138,],[191,]),'mandar_parametrosD':([145,],[201,]),'funcionesD':([168,],[223,]),'decisionU':([265,],[270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA ID PUNTOYCOMA variables funciones PRINCIPAL L_PAR R_PAR bloque empty','program',10,'p_programa','lexer_parser.py',211),
  ('variables -> VARIABLES variablesU','variables',2,'p_variales','lexer_parser.py',216),
  ('variables -> empty','variables',1,'p_variales','lexer_parser.py',217),
  ('variablesU -> variablesD','variablesU',1,'p_variales','lexer_parser.py',219),
  ('variablesU -> empty','variablesU',1,'p_variales','lexer_parser.py',220),
  ('variablesD -> ID COMA variablesD','variablesD',3,'p_variales','lexer_parser.py',222),
  ('variablesD -> ID DOSPUNTOS tipo_var PUNTOYCOMA variablesU','variablesD',5,'p_variales','lexer_parser.py',223),
  ('funciones -> funcionesU','funciones',1,'p_funciones','lexer_parser.py',228),
  ('funciones -> empty','funciones',1,'p_funciones','lexer_parser.py',229),
  ('funcionesU -> tipo_funcion FUNCION ID L_PAR recibir_parametros R_PAR variables bloque funcionesD','funcionesU',9,'p_funciones','lexer_parser.py',231),
  ('funcionesD -> funciones','funcionesD',1,'p_funciones','lexer_parser.py',233),
  ('funcionesD -> empty','funcionesD',1,'p_funciones','lexer_parser.py',234),
  ('tipo_funcion -> ENTERO empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',239),
  ('tipo_funcion -> FLOTANTE empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',240),
  ('tipo_funcion -> CARACTER empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',241),
  ('tipo_funcion -> VOID empty','tipo_funcion',2,'p_tipo_funcion','lexer_parser.py',242),
  ('tipo_var -> ENTERO empty','tipo_var',2,'p_tipo_var','lexer_parser.py',247),
  ('tipo_var -> FLOTANTE empty','tipo_var',2,'p_tipo_var','lexer_parser.py',248),
  ('tipo_var -> CARACTER empty','tipo_var',2,'p_tipo_var','lexer_parser.py',249),
  ('recibir_parametros -> ID DOSPUNTOS tipo_var recibir_parametrosD empty','recibir_parametros',5,'p_recibir_parametros','lexer_parser.py',254),
  ('recibir_parametros -> empty','recibir_parametros',1,'p_recibir_parametros','lexer_parser.py',255),
  ('recibir_parametrosD -> COMA recibir_parametros empty','recibir_parametrosD',3,'p_recibir_parametros','lexer_parser.py',257),
  ('recibir_parametrosD -> empty','recibir_parametrosD',1,'p_recibir_parametros','lexer_parser.py',258),
  ('mandar_parametros -> ID mandar_parametrosD empty','mandar_parametros',3,'p_mandar_parametros','lexer_parser.py',263),
  ('mandar_parametros -> empty','mandar_parametros',1,'p_mandar_parametros','lexer_parser.py',264),
  ('mandar_parametrosD -> COMA mandar_parametros empty','mandar_parametrosD',3,'p_mandar_parametros','lexer_parser.py',266),
  ('mandar_parametrosD -> empty','mandar_parametrosD',1,'p_mandar_parametros','lexer_parser.py',267),
  ('bloque -> L_LLAVE bloqueU R_LLAVE empty','bloque',4,'p_bloque','lexer_parser.py',274),
  ('bloqueU -> estatuto bloqueD empty','bloqueU',3,'p_bloque','lexer_parser.py',276),
  ('bloqueU -> empty','bloqueU',1,'p_bloque','lexer_parser.py',277),
  ('bloqueD -> bloqueU empty','bloqueD',2,'p_bloque','lexer_parser.py',279),
  ('bloqueD -> empty','bloqueD',1,'p_bloque','lexer_parser.py',280),
  ('estatuto -> asignacion PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',285),
  ('estatuto -> llamada PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',286),
  ('estatuto -> retorno PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',287),
  ('estatuto -> lectura PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',288),
  ('estatuto -> escritura PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',289),
  ('estatuto -> decision empty','estatuto',2,'p_estatuto','lexer_parser.py',290),
  ('estatuto -> condicional empty','estatuto',2,'p_estatuto','lexer_parser.py',291),
  ('estatuto -> no_condicional empty','estatuto',2,'p_estatuto','lexer_parser.py',292),
  ('estatuto -> funciones_especiales PUNTOYCOMA empty','estatuto',3,'p_estatuto','lexer_parser.py',293),
  ('estatuto -> empty','estatuto',1,'p_estatuto','lexer_parser.py',294),
  ('asignacion -> ID IGUAL hiper_exp empty','asignacion',4,'p_asignacion','lexer_parser.py',299),
  ('llamada -> ID L_PAR mandar_parametros R_PAR empty','llamada',5,'p_llamada','lexer_parser.py',304),
  ('retorno -> REGRESA L_PAR ID R_PAR empty','retorno',5,'p_retorno','lexer_parser.py',309),
  ('lectura -> LEER L_PAR ID R_PAR empty','lectura',5,'p_lectura','lexer_parser.py',314),
  ('escritura -> ESCRIBIR L_PAR escrituraD R_PAR empty','escritura',5,'p_escritura','lexer_parser.py',319),
  ('escrituraD -> hiper_exp empty','escrituraD',2,'p_escritura','lexer_parser.py',321),
  ('escrituraD -> LETRERO empty','escrituraD',2,'p_escritura','lexer_parser.py',322),
  ('decision -> SI L_PAR hiper_exp R_PAR ENTONCES bloque decisionU empty','decision',8,'p_decision','lexer_parser.py',327),
  ('decisionU -> SINO bloque empty','decisionU',3,'p_decision','lexer_parser.py',329),
  ('decisionU -> empty','decisionU',1,'p_decision','lexer_parser.py',330),
  ('condicional -> MIENTRAS L_PAR hiper_exp R_PAR HACER bloque empty','condicional',7,'p_condicional','lexer_parser.py',335),
  ('no_condicional -> DESDE L_PAR asignacion R_PAR HASTA hiper_exp HACER bloque empty','no_condicional',9,'p_no_condicional','lexer_parser.py',340),
  ('funciones_especiales -> circulo empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',347),
  ('funciones_especiales -> color empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',348),
  ('funciones_especiales -> grosor empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',349),
  ('funciones_especiales -> linea empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',350),
  ('funciones_especiales -> puntoxy empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',351),
  ('funciones_especiales -> arco empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',352),
  ('funciones_especiales -> penup empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',353),
  ('funciones_especiales -> pendown empty','funciones_especiales',2,'p_funciones_especiales','lexer_parser.py',354),
  ('funciones_especiales -> empty','funciones_especiales',1,'p_funciones_especiales','lexer_parser.py',355),
  ('circulo -> CIRCULO L_PAR hiper_exp R_PAR empty','circulo',5,'p_circulo','lexer_parser.py',360),
  ('color -> COLOR L_PAR hiper_exp R_PAR empty','color',5,'p_color','lexer_parser.py',365),
  ('grosor -> GROSOR L_PAR hiper_exp R_PAR empty','grosor',5,'p_grosor','lexer_parser.py',370),
  ('linea -> LINEA L_PAR hiper_exp COMA hiper_exp COMA hiper_exp COMA hiper_exp R_PAR empty','linea',11,'p_linea','lexer_parser.py',375),
  ('puntoxy -> PUNTOXY L_PAR hiper_exp COMA hiper_exp R_PAR empty','puntoxy',7,'p_puntoxy','lexer_parser.py',380),
  ('arco -> ARCO L_PAR hiper_exp R_PAR empty','arco',5,'p_arco','lexer_parser.py',385),
  ('penup -> PENUP L_PAR hiper_exp R_PAR empty','penup',5,'p_penup','lexer_parser.py',390),
  ('pendown -> PENDOWN L_PAR hiper_exp R_PAR empty','pendown',5,'p_pendown','lexer_parser.py',395),
  ('operadorA -> MAS empty','operadorA',2,'p_operadorA','lexer_parser.py',402),
  ('operadorA -> MENOS empty','operadorA',2,'p_operadorA','lexer_parser.py',403),
  ('operadorT -> MULT empty','operadorT',2,'p_operadorT','lexer_parser.py',408),
  ('operadorT -> DIV empty','operadorT',2,'p_operadorT','lexer_parser.py',409),
  ('operadorL -> OR empty','operadorL',2,'p_operadorL','lexer_parser.py',414),
  ('operadorL -> AND empty','operadorL',2,'p_operadorL','lexer_parser.py',415),
  ('operadorR -> MENORQUE empty','operadorR',2,'p_operadorR','lexer_parser.py',420),
  ('operadorR -> MAYORQUE empty','operadorR',2,'p_operadorR','lexer_parser.py',421),
  ('operadorR -> MENORIGUALQUE empty','operadorR',2,'p_operadorR','lexer_parser.py',422),
  ('operadorR -> MAYORIGUALQUE empty','operadorR',2,'p_operadorR','lexer_parser.py',423),
  ('operadorR -> IGUALQUE empty','operadorR',2,'p_operadorR','lexer_parser.py',424),
  ('operadorR -> DIFQUE empty','operadorR',2,'p_operadorR','lexer_parser.py',425),
  ('hiper_exp -> super_exp hiper_expU','hiper_exp',2,'p_hiper_exp','lexer_parser.py',432),
  ('hiper_expU -> operadorL hiper_exp empty','hiper_expU',3,'p_hiper_exp','lexer_parser.py',434),
  ('hiper_expU -> empty','hiper_expU',1,'p_hiper_exp','lexer_parser.py',435),
  ('super_exp -> exp super_expU','super_exp',2,'p_super_exp','lexer_parser.py',440),
  ('super_expU -> operadorR exp empty','super_expU',3,'p_super_exp','lexer_parser.py',442),
  ('super_expU -> empty','super_expU',1,'p_super_exp','lexer_parser.py',443),
  ('exp -> termino expU','exp',2,'p_exp','lexer_parser.py',448),
  ('expU -> operadorA exp','expU',2,'p_exp','lexer_parser.py',450),
  ('expU -> empty','expU',1,'p_exp','lexer_parser.py',451),
  ('termino -> factor terminoU','termino',2,'p_termino','lexer_parser.py',456),
  ('terminoU -> operadorT termino','terminoU',2,'p_termino','lexer_parser.py',458),
  ('terminoU -> empty','terminoU',1,'p_termino','lexer_parser.py',459),
  ('factor -> varcte empty','factor',2,'p_factor','lexer_parser.py',464),
  ('factor -> llamada empty','factor',2,'p_factor','lexer_parser.py',465),
  ('factor -> L_PAR hiper_exp R_PAR empty','factor',4,'p_factor','lexer_parser.py',466),
  ('varcte -> ID empty','varcte',2,'p_varcte','lexer_parser.py',473),
  ('varcte -> ENTEROVAL empty','varcte',2,'p_varcte','lexer_parser.py',474),
  ('varcte -> FLOTANTEVAL empty','varcte',2,'p_varcte','lexer_parser.py',475),
  ('varcte -> CARACTERVAL empty','varcte',2,'p_varcte','lexer_parser.py',476),
  ('empty -> <empty>','empty',0,'p_empty','lexer_parser.py',484),
]
